<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NodeC" loc="15:NodeC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/opt/tinyos-main/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:/opt/tinyos-main/tos/lib/tossim/PlatformC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/PlatformC.nc">
        <short>&#10; The default simulation platform, which does nothing.</short>
        <long>&#10; The default simulation platform, which does nothing.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/opt/tinyos-main/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/opt/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="46:/opt/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/opt/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/opt/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="53:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/opt/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/opt/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Node" loc="20:Node.nc">
      <module/>
    </component>
    <component qname="NodeC.GeneralReceive" loc="43(NodeC.GeneralReceive):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.NeighborListC" loc="7(NodeC.NeighborListC):dataStructures/modules/ListC.nc">
      <instance number="0">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
            <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
          </type-tag>
          <value cst="I:64">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.LspLinkC" loc="7(NodeC.LspLinkC):dataStructures/modules/ListC.nc">
      <instance number="1">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="lspLink" ref="0x7f1e51dc5930"/>
            <typename><typedef-ref name="lspLink" ref="0x7f1e51dc4470"/></typename>
          </type-tag>
          <value cst="I:64">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.HashmapC" loc="11(NodeC.HashmapC):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <value cst="I:300">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC" loc="3(NodeC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="0">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.SimpleSendP" loc="12(NodeC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.sendTimer" loc="44(NodeC.SimpleSendC.sendTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd8b40"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1e51dd7020"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1e517a53d0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd8b40"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1e51dd7020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd8b40"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1e51dd7020"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd8b40"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1e51dd7020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC" loc="47(NodeC.SimpleSendC.AMSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC" loc="47(NodeC.SimpleSendC.AMSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC" loc="41(NodeC.SimpleSendC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC.PoolP" loc="53(NodeC.SimpleSendC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514bf6a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.QueueC" loc="42(NodeC.SimpleSendC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC" loc="13:lib/modules/CommandHandlerC.nc">
      <documentation loc="1:lib/modules/CommandHandlerC.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommandHandlerP" loc="13:lib/modules/CommandHandlerP.nc">
      <documentation loc="1:lib/modules/CommandHandlerP.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CommandHandlerC.CommandReceive" loc="43(CommandHandlerC.CommandReceive):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC" loc="41(CommandHandlerC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
            <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC.PoolP" loc="53(CommandHandlerC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514bf6a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC.QueueC" loc="42(CommandHandlerC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
              <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC" loc="4:lib/modules/NeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryP" loc="8:lib/modules/NeighborDiscoveryP.nc">
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC" loc="3(NeighborDiscoveryC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="1">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:62">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.SimpleSendP" loc="12(NeighborDiscoveryC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.sendTimer" loc="44(NeighborDiscoveryC.SimpleSendC.sendTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.AMSenderC" loc="47(NeighborDiscoveryC.SimpleSendC.AMSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.AMSenderC.SenderC" loc="47(NeighborDiscoveryC.SimpleSendC.AMSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NeighborDiscoveryC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.PoolC" loc="41(NeighborDiscoveryC.SimpleSendC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.PoolC.PoolP" loc="53(NeighborDiscoveryC.SimpleSendC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514bf6a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.SimpleSendC.QueueC" loc="42(NeighborDiscoveryC.SimpleSendC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.AMReceiverC" loc="43(NeighborDiscoveryC.AMReceiverC):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:62">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.myTimerC" loc="44(NeighborDiscoveryC.myTimerC):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC" loc="4:lib/modules/FloodingC.nc">
      <configuration/>
    </component>
    <component qname="FloodingP" loc="6:lib/modules/FloodingP.nc">
      <module/>
    </component>
    <component qname="FloodingC.SimpleSendC" loc="3(FloodingC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="2">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:79">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC.SimpleSendC.SimpleSendP" loc="12(FloodingC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="FloodingC.SimpleSendC.sendTimer" loc="44(FloodingC.SimpleSendC.sendTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC.SimpleSendC.AMSenderC" loc="47(FloodingC.SimpleSendC.AMSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC.SimpleSendC.AMSenderC.SenderC" loc="47(FloodingC.SimpleSendC.AMSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(FloodingC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FloodingC.SimpleSendC.PoolC" loc="41(FloodingC.SimpleSendC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC.SimpleSendC.PoolC.PoolP" loc="53(FloodingC.SimpleSendC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514bf6a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FloodingC.SimpleSendC.QueueC" loc="42(FloodingC.SimpleSendC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FloodingC.AMReceiverC" loc="43(FloodingC.AMReceiverC):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:79">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="FloodingC.PacketListC" loc="7(FloodingC.PacketListC):dataStructures/modules/ListC.nc">
      <instance number="2">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
            <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
          </type-tag>
          <value cst="I:64">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateC" loc="4:lib/modules/LinkStateC.nc">
      <configuration/>
    </component>
    <component qname="LinkStateP" loc="6:lib/modules/LinkStateP.nc">
      <module/>
    </component>
    <component qname="LinkStateC.SimpleSendC" loc="3(LinkStateC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="3">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:62">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateC.SimpleSendC.SimpleSendP" loc="12(LinkStateC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateC.SimpleSendC.sendTimer" loc="44(LinkStateC.SimpleSendC.sendTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateC.SimpleSendC.AMSenderC" loc="47(LinkStateC.SimpleSendC.AMSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateC.SimpleSendC.AMSenderC.SenderC" loc="47(LinkStateC.SimpleSendC.AMSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(LinkStateC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateC.SimpleSendC.PoolC" loc="41(LinkStateC.SimpleSendC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateC.SimpleSendC.PoolC.PoolP" loc="53(LinkStateC.SimpleSendC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514bf6a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateC.SimpleSendC.QueueC" loc="42(LinkStateC.SimpleSendC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateC.AMReceiverC" loc="43(LinkStateC.AMReceiverC):/opt/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:62">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateC.LspTimer" loc="44(LinkStateC.LspTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateC.Dijkstra" loc="44(LinkStateC.Dijkstra):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC" loc="10:lib/modules/TransportC.nc">
      <documentation loc="1:lib/modules/TransportC.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TransportP" loc="14:lib/modules/TransportP.nc">
      <documentation loc="1:lib/modules/TransportP.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC" loc="3(TransportC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="4">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.SimpleSendP" loc="12(TransportC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC.sendTimer" loc="44(TransportC.SimpleSendC.sendTimer):/opt/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.AMSenderC" loc="47(TransportC.SimpleSendC.AMSenderC):/opt/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.AMSenderC.SenderC" loc="47(TransportC.SimpleSendC.AMSenderC.SenderC):/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TransportC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC.PoolC" loc="41(TransportC.SimpleSendC.PoolC):/opt/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
            <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.PoolC.PoolP" loc="53(TransportC.SimpleSendC.PoolC.PoolP):/opt/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514bf6a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC.QueueC" loc="42(TransportC.SimpleSendC.QueueC):/opt/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
              <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.TempSocketsC" loc="7(TransportC.TempSocketsC):dataStructures/modules/ListC.nc">
      <instance number="3">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:280" alignment="I:4"><struct-ref name="socket_store_t" ref="0x7f1e51970020"/>
            <typename><typedef-ref name="socket_store_t" ref="0x7f1e5196c3e0"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SocketsC" loc="7(TransportC.SocketsC):dataStructures/modules/ListC.nc">
      <instance number="4">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:280" alignment="I:4"><struct-ref name="socket_store_t" ref="0x7f1e51970020"/>
            <typename><typedef-ref name="socket_store_t" ref="0x7f1e5196c3e0"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.RoutingTableC" loc="11(TransportC.RoutingTableC):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f1e517a53d0" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1e517a53d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f1e517a56e0" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendC" loc="3:lib/modules/SimpleSendC.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x7f1e51873c80" loc="3:lib/modules/SimpleSendC.nc">
          <component-ref qname="SimpleSendC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendP" loc="12:lib/modules/SimpleSendP.nc" abstract="">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f1e514bf6a0" loc="41:/opt/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514bf6a0"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f1e514bfa10" loc="41:/opt/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f1e514b8980" loc="53:/opt/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514b8980"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f1e514b8cc0" loc="53:/opt/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1e515dd770" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1e515dd770"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1e515ddaa0" loc="46:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1e5152cca0" loc="45:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1e518f41d0" loc="43:/opt/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1e5160e020" loc="46:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1e5160e020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f1e5148a020" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f1e5148a020"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f1e5148a3a0" loc="42:/opt/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f1e5179cd70" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1e5179cd70"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f1e517990d0" loc="23:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1e5155a1d0" loc="47:/opt/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ListC" loc="7:dataStructures/modules/ListC.nc" abstract="">
      <parameters>
        <typedef name="t" ref="0x7f1e518eb940" loc="7:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e518eb940"/></type-var>
        </typedef>
        <constant name="n" ref="0x7f1e518ebc10" loc="7:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1e5154fae0" loc="43:/opt/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HashmapC" loc="11:dataStructures/modules/HashmapC.nc" abstract="">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1e518b2680" loc="11:dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e518b2680"/></type-var>
        </typedef>
        <constant name="n" ref="0x7f1e518b2950" loc="11:dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1e51553020" loc="47:/opt/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1e5158de00" loc="46:/opt/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1e5158de00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SimpleSend" loc="3:lib/interfaces/SimpleSend.nc">
      <function command="" provided="0" name="send" ref="0x7f1e51967020" loc="4:lib/interfaces/SimpleSend.nc">
        <interfacedef-ref qname="SimpleSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
              <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
            </type-tag>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e5196a8f0" loc="4:lib/interfaces/SimpleSend.nc">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
              <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0x7f1e5196ac40" loc="4:lib/interfaces/SimpleSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1e51c56460" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1e51c561e0" loc="113:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1e51c55ab0" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1e51c55830" loc="138:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1e51c587b0" loc="104:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1e51c56cb0" loc="130:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Hashmap" loc="10:dataStructures/interfaces/Hashmap.nc">
      <documentation loc="1:dataStructures/interfaces/Hashmap.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1e51969d00" loc="10:dataStructures/interfaces/Hashmap.nc">
          <interfacedef-ref qname="Hashmap"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51969d00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1e51963d50" loc="13:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51969d00"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f1e51963ad0" loc="13:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1e51962dd0" loc="15:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7f1e51963450" loc="12:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f1e519631d0" loc="12:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x7f1e51964b00" loc="11:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51969d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f1e51964560" loc="11:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x7f1e51964870" loc="11:dataStructures/interfaces/Hashmap.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51969d00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getKeys" ref="0x7f1e51961c50" loc="17:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="contains" ref="0x7f1e519626e0" loc="14:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f1e51962460" loc="14:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f1e519614f0" loc="16:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1e51d0bd40" loc="60:/opt/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1e51860d50" loc="50:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51860d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1e51859020" loc="97:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51860d50"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f1e5185c720" loc="80:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f1e5185d630" loc="61:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f1e5185b2a0" loc="89:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51860d50"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f1e5185b020" loc="89:/opt/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e51860d50"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f1e5185de80" loc="72:/opt/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1e52053c50" loc="67:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1e51fbe4f0" loc="75:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f1e5176ee40" loc="38:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f1e5176d6b0" loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f1e5176e6d0" loc="32:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f1e5176c020" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f1e5176f420" loc="21:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e2ed0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f1e517e1320"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f1e5176fe50" loc="27:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e2ed0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f1e517e1320"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f1e5176fbd0" loc="27:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e2ed0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f1e517e1320"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/opt/tinyos-main/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x7f1e51c1a490" loc="45:/opt/tinyos-main/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1e52da2930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c1a210" loc="45:/opt/tinyos-main/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1e51c46af0" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c46870" loc="65:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1e51c41ba0" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c41920" loc="78:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1e51c3d020" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c3e910" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51c3ec40" loc="126:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1e51c3e020" loc="106:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1e51c3f050" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c40a70" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51c40da0" loc="94:/opt/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1e517f2070" loc="53:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1e517f2070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1e517f2990" loc="61:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1e5186a020" loc="43:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5186a020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f1e51867790" loc="80:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5186a020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f1e518652a0" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5186a020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f1e51865020" loc="97:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5186a020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f1e52da8c30"/>
              <value-structured>
                <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x7f1e52da8c30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f1e518642a0" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5186a020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1e51864020" loc="108:/opt/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f1e51869070" loc="57:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f1e51867020" loc="72:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1e51866390" loc="88:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5186a020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f1e5186a8d0" loc="50:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f1e518697f0" loc="65:/opt/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1e51c53c90" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1e51c53340" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1e51c536c0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51c539f0" loc="80:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1e51c4c620" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c4c020" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51c4c350" loc="135:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1e51c4d6d0" loc="123:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1e51c512a0" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c51020" loc="96:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1e51c4f7f0" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c4f210" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1e51c4f560" loc="110:/opt/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1e51a79930" loc="49:/opt/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1e51a79930"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1e51a76270" loc="55:/opt/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1e51a75020" loc="63:/opt/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1e51a79930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1e51a769f0" loc="63:/opt/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1e51a76d10" loc="63:/opt/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1e51a79930"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f1e51842350" loc="52:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f1e51845b30" loc="46:/opt/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f1e5177f5a0" loc="45:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e6510"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f1e517e6930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f1e5177dab0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517db080"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f1e517db4a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f1e5177e830" loc="49:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517df790"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f1e517dfbb0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f1e5177d2a0" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517df790"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f1e517dfbb0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1e5177d020" loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517df790"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f1e517dfbb0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f1e5177c520" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517db080"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f1e517db4a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f1e5177c2a0" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517db080"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f1e517db4a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1e5177e020" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e6510"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f1e517e6930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1e5177fd70" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e6510"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f1e517e6930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1e51548030" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e5154ba40" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e5154bd70" loc="75:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1e51542660" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51542060" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51542390" loc="125:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1e51543790" loc="112:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1e51547350" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e515470d0" loc="89:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1e51545870" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51545290" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1e515455e0" loc="100:/opt/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f1e5156e270" loc="53:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1e5156e270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f1e5156edb0" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1e5156e270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f1e5156eb30" loc="64:/opt/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1e5156e270"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f1e51992af0" loc="50:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f1e51991ab0" loc="60:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f1e51991350" loc="55:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f1e519922b0" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f1e51995ca0" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1e51992020" loc="45:/opt/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1e517b9cc0" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1e517b9cc0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1e517b6020" loc="56:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1e517b3c50" loc="109:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1e517b5ba0" loc="78:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1e517b32b0" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1e517b4bd0" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1e517b3020" loc="103:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1e517b43b0" loc="88:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1e517b1480" loc="116:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1e517b6b80" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1e517b6900" loc="66:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517b6020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1e517b53e0" loc="73:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1e51d05190" loc="62:/opt/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f1e51782d40" loc="41:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e51782d40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f1e517767a0" loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1e51778860" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1e517796a0" loc="48:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e51782d40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f1e51777020" loc="62:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f1e51774020" loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1e517780b0" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e51782d40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f1e51779de0" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e51782d40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1e51777790" loc="65:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1e51776020" loc="68:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkState" loc="1:lib/interfaces/LinkState.nc">
      <function command="" provided="0" name="print" ref="0x7f1e51941c10" loc="4:lib/interfaces/LinkState.nc">
        <interfacedef-ref qname="LinkState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="printRoutingTable" ref="0x7f1e51940350" loc="5:lib/interfaces/LinkState.nc">
        <interfacedef-ref qname="LinkState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1e51941560" loc="3:lib/interfaces/LinkState.nc">
        <interfacedef-ref qname="LinkState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Transport" loc="18:lib/interfaces/Transport.nc">
      <documentation loc="4:lib/interfaces/Transport.nc">
        <short>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP.</short>
        <long>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP. This will be used by the application layer to set up TCP&#10; packets. Internally the system will be handling syn/ack/data/fin&#10; Transport packets.&#10;&#10; @project&#10;   Transmission Control Protocol&#10; @author&#10;      Alex Beltran - abeltran2@ucmerced.edu&#10; @date&#10;   2013/11/12&#10;</long>
      </documentation>
      <function command="" provided="0" name="listen" ref="0x7f1e51934950" loc="147:lib/interfaces/Transport.nc">
        <documentation loc="138:lib/interfaces/Transport.nc">
          <short>&#10; Listen to the socket and wait for a connection.</short>
          <long>&#10; Listen to the socket and wait for a connection.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing.&#10; @side Server&#10; @return error_t - returns SUCCESS if you are able change the state&#10;   to listen else FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e519346d0" loc="147:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f1e5193a510" loc="83:lib/interfaces/Transport.nc">
        <documentation loc="75:lib/interfaces/Transport.nc">
          <short>&#10; This will pass the packet so you can handle it internally.</short>
          <long>&#10; This will pass the packet so you can handle it internally.&#10; @param&#10;    pack *package: the TCP packet that you are handling.&#10; @Side Client/Server&#10; @return uint16_t - return SUCCESS if you are able to handle this&#10;    packet or FAIL if there are errors.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
                <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="package" ref="0x7f1e5193a290" loc="83:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
                <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x7f1e51936da0" loc="136:lib/interfaces/Transport.nc">
        <documentation loc="127:lib/interfaces/Transport.nc">
          <short>&#10; A hard close, which is not graceful.</short>
          <long>&#10; A hard close, which is not graceful. This portion is optional.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing.&#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e51936b20" loc="136:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7f1e5193d980" loc="42:lib/interfaces/Transport.nc">
        <documentation loc="30:lib/interfaces/Transport.nc">
          <short>&#10; Bind a socket with an address.</short>
          <long>&#10; Bind a socket with an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       you are binding.&#10; @param&#10;    socket_addr_t *addr: the source port and source address that&#10;       you are biding to the socket, fd.&#10; @Side Client/Server&#10; @return error_t - SUCCESS if you were able to bind this socket, FAIL&#10;       if you were unable to bind.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7f1e51972e10"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7f1e519717a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e5193d330" loc="42:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1e5193d6f0" loc="42:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7f1e51972e10"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7f1e519717a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="socket" ref="0x7f1e5194da90" loc="28:lib/interfaces/Transport.nc">
        <documentation loc="20:lib/interfaces/Transport.nc">
          <short>&#10; Get a socket if there is one available.</short>
          <long>&#10; Get a socket if there is one available.&#10; @Side Client/Server&#10; @return&#10;    socket_t - return a socket file descriptor which is a number&#10;    associated with a socket. If you are unable to allocated&#10;    a socket then return a NULL socket_t.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f1e51938720" loc="100:lib/interfaces/Transport.nc">
        <documentation loc="85:lib/interfaces/Transport.nc">
          <short>&#10; Read from the socket and write this data to the buffer.</short>
          <long>&#10; Read from the socket and write this data to the buffer. This data&#10; is obtained from your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a read.&#10; @param&#10;    uint8_t *buff: the buffer that is being written.&#10; @param&#10;    uint16_t bufflen: the amount of data that can be written to the&#10;       buffer.&#10; @Side For your project, only server side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to read&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e5193ad50" loc="100:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x7f1e51938110" loc="100:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x7f1e51938480" loc="100:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x7f1e51937760" loc="114:lib/interfaces/Transport.nc">
        <documentation loc="102:lib/interfaces/Transport.nc">
          <short>&#10; Attempts a connection to an address.</short>
          <long>&#10; Attempts a connection to an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are attempting a connection with.&#10; @param&#10;    socket_addr_t *addr: the destination address and port where&#10;       you will atempt a connection.&#10; @side Client&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a connection with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7f1e51972e10"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7f1e519717a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e51937110" loc="114:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1e519374d0" loc="114:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7f1e51972e10"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7f1e519717a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x7f1e5193c510" loc="56:lib/interfaces/Transport.nc">
        <documentation loc="44:lib/interfaces/Transport.nc">
          <short>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.</short>
          <long>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting an accept. remember, only do on listen.&#10; @side Server&#10; @return socket_t - returns a new socket if the connection is&#10;    accepted. this socket is a copy of the server socket but with&#10;    a destination associated with the destination address and port.&#10;    if not return a null socket.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e5193c290" loc="56:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1e5193b830" loc="73:lib/interfaces/Transport.nc">
        <documentation loc="58:lib/interfaces/Transport.nc">
          <short>&#10; Write to the socket from a buffer.</short>
          <long>&#10; Write to the socket from a buffer. This data will eventually be&#10; transmitted through your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a write.&#10; @param&#10;    uint8_t *buff: the buffer data that you are going to wrte from.&#10; @param&#10;    uint16_t bufflen: The amount of data that you are trying to&#10;       submit.&#10; @Side For your project, only client side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to write&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e5193ce80" loc="73:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x7f1e5193b220" loc="73:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x7f1e5193b590" loc="73:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x7f1e519362e0" loc="125:lib/interfaces/Transport.nc">
        <documentation loc="116:lib/interfaces/Transport.nc">
          <short>&#10; Closes the socket.</short>
          <long>&#10; Closes the socket.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are closing.&#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7f1e51936060" loc="125:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="List" loc="11:dataStructures/interfaces/List.nc">
      <documentation loc="1:dataStructures/interfaces/List.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f1e5195d510" loc="11:dataStructures/interfaces/List.nc">
          <interfacedef-ref qname="List"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="size" ref="0x7f1e51956a50" loc="25:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="editspot" ref="0x7f1e51954910" loc="29:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x7f1e51954390" loc="29:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          </variable>
          <variable name="spot" ref="0x7f1e51954680" loc="29:dataStructures/interfaces/List.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="front" ref="0x7f1e51959e80" loc="21:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1e51958c40" loc="23:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1e519553f0" loc="26:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x7f1e51955170" loc="26:dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isFull" ref="0x7f1e51956350" loc="24:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popspot" ref="0x7f1e51955cd0" loc="28:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="spot" ref="0x7f1e51955a50" loc="28:dataStructures/interfaces/List.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pushback" ref="0x7f1e5195a020" loc="17:dataStructures/interfaces/List.nc">
        <documentation loc="12:dataStructures/interfaces/List.nc">
          <short>&#10; Put value into the end of the list.</short>
          <long>&#10; Put value into the end of the list.&#10;&#10; @param input - data to be inserted&#10;</long>
        </documentation>
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x7f1e5195dd60" loc="17:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="popfront" ref="0x7f1e519597c0" loc="20:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popback" ref="0x7f1e519590e0" loc="19:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pushfront" ref="0x7f1e5195a9a0" loc="18:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x7f1e5195a720" loc="18:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="back" ref="0x7f1e51958550" loc="22:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e5195d510"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1e51c49b10" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
              <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c491b0" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1e51c49500" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51c49830" loc="78:/opt/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x7f1e51cb3b80" loc="44:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x7f1e51cb3900" loc="44:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x7f1e51cb0b20" loc="47:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x7f1e52db0a30"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7f1e51cb01c0" loc="47:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x7f1e51cb0520" loc="47:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51cb0880" loc="47:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x7f1e52db0a30"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x7f1e51caf970" loc="49:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7f1e51caf270" loc="48:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x7f1e51cb31f0" loc="43:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioChannel" ref="0x7f1e51cad430" loc="51:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newRadioChannel" ref="0x7f1e51cad1b0" loc="51:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f1e51cb1a60" loc="46:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRadioChannel" ref="0x7f1e51cadbd0" loc="52:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x7f1e51cb1350" loc="45:/opt/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="1:lib/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="print" ref="0x7f1e519436d0" loc="4:lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="neighborReceived" ref="0x7f1e519420b0" loc="5:lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
                <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myMsg" ref="0x7f1e51943e00" loc="5:lib/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
                <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1e51943020" loc="3:lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1e517ae6b0" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1e517ae6b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1e517ae8f0" loc="57:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517ae8f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1e517ab270" loc="64:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1e517ae8f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1e517aa390" loc="76:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1e517abaf0" loc="71:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1e517aaaf0" loc="82:/opt/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1e51c28770" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c284f0" loc="59:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1e51c26940" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c266c0" loc="71:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1e51c25ab0" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c25830" loc="85:/opt/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x7f1e51b9e020" loc="48:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1e51ba2ac0" loc="48:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x7f1e51ba2e60" loc="49:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7f1e51b9f1c0" loc="50:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x7f1e51b9f560" loc="51:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x7f1e51b9f870" loc="52:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x7f1e51b9fbc0" loc="53:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7f1e51b9bc00" loc="60:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51b9b980" loc="60:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x7f1e51b9c0e0" loc="56:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x7f1e51b9c830" loc="57:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x7f1e51b9e940" loc="55:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1e51b9e6c0" loc="55:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x7f1e51b9b2a0" loc="59:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51b9b020" loc="59:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x7f1e51b9a5f0" loc="61:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51b9a370" loc="61:/opt/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1e51c172c0" loc="57:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f1e51c1c820" loc="57:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x7f1e51c1cba0" loc="57:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1e51c17020" loc="57:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7f1e51c14aa0" loc="85:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c14820" loc="85:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1e51c16020" loc="69:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c17c20" loc="69:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1e51c14020" loc="76:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c16920" loc="76:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1e51c16c70" loc="76:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x7f1e51c13550" loc="87:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1e51c132d0" loc="87:/opt/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f1e5178e430" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1e5178e430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f1e51788020" loc="98:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f1e51789020" loc="87:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1e5178ed60" loc="61:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1e5178e430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f1e51788a00" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f1e51788780" loc="104:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f1e51787270" loc="110:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f1e5178c7b0" loc="75:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1e5178c020" loc="70:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f1e517897e0" loc="93:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1e5178d760" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1e5178e430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f1e5178d4e0" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1e5178e430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1e5178a020" loc="78:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1e5178a770" loc="81:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1e51c2d9f0" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c2d770" loc="177:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1e51c38600" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c38380" loc="88:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1e51c449e0" loc="68:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1e51c39520" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c392a0" loc="78:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1e51c35020" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c34950" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1e51c34ca0" loc="121:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1e51c37a30" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c37450" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1e51c377a0" loc="103:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1e51c314a0" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c31220" loc="147:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1e51c30850" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c302a0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1e51c305c0" loc="162:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1e51c322a0" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c32020" loc="136:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1e51c2f020" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1e51c2c8c0" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
                <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1e51c2cc10" loc="187:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1e51c2fe40" loc="195:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1e51e57cb0" loc="57:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1e52480ca0" loc="72:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1e52480490" loc="65:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommandHandler" loc="1:lib/interfaces/CommandHandler.nc">
      <function event="" provided="0" name="printLinkState" ref="0x7f1e5194bbc0" loc="6:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printNeighbors" ref="0x7f1e5194cd50" loc="4:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printDistanceVector" ref="0x7f1e51949350" loc="7:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestClient" ref="0x7f1e51947150" loc="9:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1e51948410" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7f1e51948780" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7f1e51948b00" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
          <variable name="transfer" ref="0x7f1e51948e80" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestServer" ref="0x7f1e51949cc0" loc="8:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7f1e51949a40" loc="8:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppServer" ref="0x7f1e51947840" loc="10:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printRouteTable" ref="0x7f1e5194b4c0" loc="5:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ping" ref="0x7f1e5194c650" loc="3:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0x7f1e5194c020" loc="3:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x7f1e5194c3c0" loc="3:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppClient" ref="0x7f1e51945020" loc="11:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1e51857a90" loc="53:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1e51857a90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1e5184e7c0" loc="136:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1e51851070" loc="83:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1e51850df0" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1e51850820" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1e51850b60" loc="114:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1e51850070" loc="98:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1e5184c8a0" loc="151:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1e5184c020" loc="144:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1e51851850" loc="92:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1e51854640" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1e518543c0" loc="64:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1e5184fdc0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1e5184f7f0" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1e5184fb30" loc="129:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1e51853120" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1e51854e80" loc="73:/opt/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1e51853920" loc="78:/opt/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <attribute name="bnd" loc="9:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52dab110" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x7f1e52dab5a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x7f1e52dab650" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="socket_addr_t" loc="26:includes/socket.h" ref="0x7f1e51972e10" defined="" size="I:3" alignment="I:1">
      <field name="port" ref="0x7f1e51971590" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_socket_port_t" ref="0x7f1e51972670"/></typename>
        </type-int>
      </field>
      <field name="addr" ref="0x7f1e51971640" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="52:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517f17d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="12:includes/packet.h" ref="0x7f1e51dcc650" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x7f1e51f5edf0" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x7f1e51f5c530" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x7f1e52496460"/></type-tag>
      </field>
      <field name="it_value" ref="0x7f1e51f5c5e0" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x7f1e52496460"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="24:/opt/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x7f1e51e50a10" defined="" size="I:7" alignment="I:1">
      <field name="strength" ref="0x7f1e51e4f8b0" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7f1e5253e2d0"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7f1e51e4f960" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x7f1e51e4fa10" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x7f1e51e4fac0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7f1e51e4fb70" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x7f1e51e4fc20" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="cc2420_metadata_t" loc="94:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cec510" defined="" size="I:12" alignment="I:1">
      <field name="rssi" ref="0x7f1e51ceb780" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7f1e51ceb830" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x7f1e51ceb8e0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x7f1e51ceb990" bit-offset="I:24" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7f1e5253e2d0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7f1e51ceba40" bit-offset="I:32" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7f1e5253e2d0"/></typename>
        </type-int>
      </field>
      <field name="timesync" ref="0x7f1e51cebaf0" bit-offset="I:40" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7f1e5253e2d0"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x7f1e51cebba0" bit-offset="I:48" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x7f1e5253be60"/></typename>
        </type-int>
      </field>
      <field name="rxInterval" ref="0x7f1e51cebc50" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="gain_entry" loc="53:/opt/tinyos-main/tos/lib/tossim/sim_gain.h" ref="0x7f1e51fd6510" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x7f1e51fd6d20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x7f1e51fd6dd0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x7f1e51fd6e80" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7f1e51fd6510"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="51:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d1d140" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="167:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517d82c0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517d84d0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517d8580" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517daa10"/></type-tag>
      </field>
    </union>
    <enum loc="138:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d100a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_gain_noise" loc="3:/opt/tinyos-main/tos/lib/tossim/sim_gain.c" ref="0x7f1e51fca9a0" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x7f1e51fc9020" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x7f1e51fc90d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x7f1e52db2a20" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/x86_64-linux-gnu/bits/time.h" ref="0x7f1e52496e20" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x7f1e524954a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x7f1e524d6960"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x7f1e52495550" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__suseconds_t" ref="0x7f1e524d5160"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="12:includes/command.h" ref="0x7f1e51dc2910" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="173:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e52477660" defined="" size="I:56" alignment="I:8">
      <field name="__data" ref="0x7f1e52477870" bit-offset="I:0" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref ref="0x7f1e524785f0"/></type-tag>
      </field>
      <field name="__size" ref="0x7f1e52477920" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e524779d0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <attribute name="nonnull" loc="8:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52dac620" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7f1e52daca90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <nx_struct name="CommandMsg" loc="16:includes/CommandMsg.h" ref="0x7f1e51dd4c10" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x7f1e51dd3680" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
      <field name="id" ref="0x7f1e51dd3730" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x7f1e51dd37e0" bit-offset="I:24" size="I:25">
        <type-array elements="I:25" size="I:25" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum name="cc2420_secctrl0_enums" loc="326:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cc33b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="94:/opt/tinyos-main/tos/lib/serial/Serial.h" ref="0x7f1e51e4de90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_secctrl1_enums" loc="336:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cc13b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="number"  loc="NONE" ref="0x7f1e52db3020" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_txctrl_enums" loc="284:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ccccc0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="123:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517e2770" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x7f1e517e2980" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x7f1e517e2a30" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x7f1e517e2ae0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x7f1e517e2b90" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7f1e517e2c40" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="21:/usr/include/_G_config.h" ref="0x7f1e52215eb0" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x7f1e522140e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x7f1e524d9560"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x7f1e52214190" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7f1e52215350"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x7f1e52215770"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="46:/usr/include/ctype.h" ref="0x7f1e522495d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="node" loc="62:/opt/tinyos-main/tos/lib/tossim/heap.c" ref="0x7f1e520cdd40" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x7f1e520cc380" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x7f1e520cc430" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_rssi_enums" loc="275:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ccdb20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="90:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517e9d00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="82:/usr/include/wchar.h" ref="0x7f1e52215350" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x7f1e52215560" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x7f1e52215610" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7f1e52217da0"/></type-tag>
      </field>
    </struct>
    <nx_struct name="security_header_t" loc="52:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cf1740" defined="" size="I:6" alignment="I:1">
      <field name="secLevel" ref="0x7f1e51cf0880" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="keyMode" ref="0x7f1e51cf0930" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x7f1e51cf09e0" bit-offset="I:5" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="frameCounter" ref="0x7f1e51cf0a90" bit-offset="I:8" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x7f1e5253be60"/></typename>
        </type-int>
      </field>
      <field name="keyID" ref="0x7f1e51cf0b40" bit-offset="I:40" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="serial_packet" loc="131:/opt/tinyos-main/tos/lib/serial/Serial.h" ref="0x7f1e51e45640" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x7f1e51e45d50" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7f1e51e46190"/>
          <typename><typedef-ref name="serial_header_t" ref="0x7f1e51e452e0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x7f1e51e45e00" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="63:/opt/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7f1e5213ba10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="integer"  loc="NONE" ref="0x7f1e52db5cf0" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/opt/tinyos-main/tos/lib/tossim/tos.h" ref="0x7f1e52148aa0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/opt/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x7f1e51e43a40" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x7f1e51e43f40" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x7f1e51e50080"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x7f1e51e506a0"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="401:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cb6020" defined="" size="I:4" alignment="I:4">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_metadata" loc="59:/opt/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x7f1e51e41450" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x7f1e51e41970" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x7f1e51e50a10"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x7f1e51e4fd80"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x7f1e52db2340" size="V:" alignment="V:">
      <field name="fn" ref="0x7f1e52db2550" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="412:/usr/include/stdlib.h" ref="0x7f1e5245ad30" defined="" size="I:24" alignment="I:8">
      <field name="__x" ref="0x7f1e52459c40" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x7f1e52459cf0" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x7f1e52459da0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x7f1e52459e50" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x7f1e52459f00" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_nonce_enums" loc="239:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cd4c00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_struct" loc="27:/usr/include/xlocale.h" ref="0x7f1e5251b5f0" defined="" size="I:232" alignment="I:8">
      <field name="__locales" ref="0x7f1e5251aa50" bit-offset="I:0" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x7f1e5251b890"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x7f1e5251ab00" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x7f1e5251abb0" bit-offset="I:896" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x7f1e5251ac60" bit-offset="I:960" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x7f1e5251ad10" bit-offset="I:1024" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <struct name="lqi_dist" loc="4:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h" ref="0x7f1e51b29920" defined="" size="I:16" alignment="I:8">
      <field name="lqi" ref="0x7f1e51b29ed0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="cdf" ref="0x7f1e51b26020" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct loc="26:/usr/include/_G_config.h" ref="0x7f1e52214a10" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x7f1e52214c20" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x7f1e524d9920"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x7f1e52214cd0" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7f1e52215350"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x7f1e52215770"/></typename>
        </type-tag>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/opt/tinyos-main/tos/lib/serial/Serial.h" ref="0x7f1e51e46190" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x7f1e51e46e10" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7f1e51e56430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7f1e51e46ec0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7f1e51e56430"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x7f1e51e45020" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x7f1e51e450d0" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x7f1e51e56020"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7f1e51e45180" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x7f1e51e589d0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="236:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e524734c0" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7f1e524736d0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e52473780" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union name="message_header" loc="50:/opt/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x7f1e51e44d70" defined="" size="I:11" alignment="I:1">
      <field name="tossim" ref="0x7f1e51e434d0" bit-offset="I:0" size="I:11">
        <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x7f1e51e523c0"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x7f1e51e51ca0"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x7f1e51e43580" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7f1e51e46190"/>
          <typename><typedef-ref name="serial_header_t" ref="0x7f1e51e452e0"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x7f1e52496460" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x7f1e52496ab0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x7f1e524d6960"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x7f1e52496b60" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__syscall_slong_t" ref="0x7f1e524d0930"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__pthread_internal_list" loc="75:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e52485280" defined="" size="I:16" alignment="I:8">
      <field name="__prev" ref="0x7f1e52485b80" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7f1e52485280"/></type-tag>
        </type-pointer>
      </field>
      <field name="__next" ref="0x7f1e52485c30" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7f1e52485280"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52da9890" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x7f1e52da9bd0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_manfidh_enums" loc="367:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cbc220" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52dabca0" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x7f1e52da91a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x7f1e52da9250" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="97:/usr/include/stdlib.h" ref="0x7f1e524be020" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x7f1e524be230" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x7f1e524be2e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="10:includes/CommandMsg.h" ref="0x7f1e51dd5dd0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="54:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h" ref="0x7f1e51d0d760" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="cc2420_packet_t" loc="111:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ce9300" defined="" size="I:12" alignment="I:1">
      <field name="packet" ref="0x7f1e51ce9a10" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f1e51cee080"/>
          <typename><typedef-ref name="cc2420_header_t" ref="0x7f1e51ced9e0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x7f1e51ce9ac0" bit-offset="I:96" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="timezone" loc="55:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7f1e5206a9d0" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x7f1e52068020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x7f1e520680d0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="133:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517df790" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517df9a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517dfa50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517e0dd0"/></type-tag>
      </field>
    </union>
    <union loc="67:/usr/include/stdlib.h" ref="0x7f1e524c5390" defined="" size="I:8" alignment="I:8">
      <field name="__uptr" ref="0x7f1e524c55a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x7f1e524c8710"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x7f1e524c5650" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <union name="wait" loc="66:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7f1e524c8710" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x7f1e524c6b00" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x7f1e524c6bb0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e524c7620"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x7f1e524c6c60" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e524c6510"/></type-tag>
      </field>
    </union>
    <enum loc="189:/usr/include/math.h" ref="0x7f1e52250ae0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_event" loc="53:/opt/tinyos-main/tos/lib/tossim/sim_event_queue.h" ref="0x7f1e52166020" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x7f1e521630a0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x7f1e52163150" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x7f1e52163200" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x7f1e521632b0" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x7f1e52163360" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x7f1e52163410" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x7f1e521634e0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x7f1e52211730" size="V:" alignment="V:">
    </struct>
    <enum loc="211:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517d40a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517e0dd0" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x7f1e517df020" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x7f1e517df0d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x7f1e517df180" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x7f1e517df230" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x7f1e517df2e0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x7f1e517df390" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x7f1e517df440" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x7f1e517df4f0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="196:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517d67d0" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x7f1e517d69e0" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x7f1e517d6a90" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x7f1e517d6b40" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x7f1e517d6bf0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="tossim_footer" loc="20:/opt/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x7f1e51e50080" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x7f1e51e50540" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7f1e525351f0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="185:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517d8970" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="__codecvt_result" loc="180:/usr/include/libio.h" ref="0x7f1e5220fd10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/opt/tinyos-main/tos/lib/tossim/sim_packet.h" ref="0x7f1e51e685d0" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum name="cc2420_iocfg0_enums" loc="347:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cc0d90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="102:/opt/tinyos-main/tos/lib/serial/Serial.h" ref="0x7f1e51e4b880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/opt/tinyos-main/tos/types/AM.h" ref="0x7f1e51e54270" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="socket_state" loc="12:includes/socket.h" ref="0x7f1e51973490" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="42:includes/packet.h" ref="0x7f1e51dc6d70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="138:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e5247c3c0" defined="" size="I:48" alignment="I:8">
      <field name="__data" ref="0x7f1e5247c5d0" bit-offset="I:0" size="I:48">
        <type-tag size="I:48" alignment="I:8"><struct-ref ref="0x7f1e5247e530"/></type-tag>
      </field>
      <field name="__size" ref="0x7f1e5247c680" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e5247c730" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum name="cc2420_rsctrl_enums" loc="317:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cc5790" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="8:includes/sendInfo.h" ref="0x7f1e51977e40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="129:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e52481b20" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7f1e52481d30" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e52481de0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="84:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7f1e524c6510" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x7f1e524c6720" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x7f1e524c67d0" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="301:/usr/include/math.h" ref="0x7f1e5224d020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="105:/usr/include/stdlib.h" ref="0x7f1e524beac0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7f1e524becd0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7f1e524bed80" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/opt/tinyos-main/tos/lib/serial/Serial.h" ref="0x7f1e51e44400" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x7f1e51e448b0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="91:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7f1e52064d50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/opt/tinyos-main/tos/lib/tossim/tos.h" ref="0x7f1e521483a0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <nx_struct name="lspLink" loc="9:includes/lsp.h" ref="0x7f1e51dc5930" defined="" size="I:4" alignment="I:1">
      <field name="neighbor" ref="0x7f1e51dc41b0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
      <field name="cost" ref="0x7f1e51dc4260" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7f1e51dc4310" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="132:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d116b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517c0620" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x7f1e517c0830" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x7f1e517c08e0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x7f1e517c0990" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x7f1e517c0a40" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x7f1e517c0af0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x7f1e517c0ba0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7f1e517c0c50" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="cc2420_status_enums" loc="164:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ce5aa0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x7f1e52db3a90" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_ram_addr_enums" loc="225:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cd7e00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="117:/usr/include/stdlib.h" ref="0x7f1e524bd770" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7f1e524bd980" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7f1e524bda30" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_battmon_enums" loc="341:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cc1e70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE" loc="245:/usr/include/libio.h" ref="0x7f1e522187f0" defined="" size="I:216" alignment="I:8">
      <field name="_flags" ref="0x7f1e52208240" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x7f1e522082f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x7f1e522083a0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x7f1e52208450" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x7f1e52208500" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x7f1e522085b0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x7f1e52208660" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x7f1e52208710" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x7f1e522087c0" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x7f1e52208870" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x7f1e52208920" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x7f1e522089d0" bit-offset="I:704" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x7f1e52208a80" bit-offset="I:768" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x7f1e5220f020"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x7f1e52208c30" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x7f1e52208ce0" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x7f1e52208d90" bit-offset="I:928" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x7f1e52208e40" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x7f1e524d9560"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x7f1e52208ef0" bit-offset="I:1024" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x7f1e52206020" bit-offset="I:1040" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x7f1e522060d0" bit-offset="I:1048" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x7f1e52206180" bit-offset="I:1088" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x7f1e52211bc0"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x7f1e52206230" bit-offset="I:1152" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x7f1e524d9920"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x7f1e522062e0" bit-offset="I:1216" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x7f1e52206390" bit-offset="I:1280" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x7f1e52206440" bit-offset="I:1344" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x7f1e522066f0" bit-offset="I:1408" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x7f1e522067a0" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x7f1e52db0a30"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x7f1e52206850" bit-offset="I:1536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x7f1e52206900" bit-offset="I:1568" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="51:/opt/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x7f1e5205a430" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="pthread_attr_t" loc="63:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e52486360" defined="" size="I:56" alignment="I:8">
      <field name="__size" ref="0x7f1e52486a00" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e52486ab0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum loc="25:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x7f1e51dc0020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="hashtable" ref="0x7f1e52147080" size="V:" alignment="V:">
    </struct>
    <struct loc="94:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d159b0" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x7f1e51d15bc0" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x7f1e51d15c70" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x7f1e51d15d20" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="heap" loc="61:/opt/tinyos-main/tos/lib/tossim/heap.h" ref="0x7f1e520d6be0" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x7f1e520d4360" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x7f1e520d4410" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x7f1e520d44c0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_syncword_enums" loc="280:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ccc5d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="64:/usr/include/x86_64-linux-gnu/sys/select.h" ref="0x7f1e524928f0" defined="" size="I:128" alignment="I:8">
      <field name="__fds_bits" ref="0x7f1e52492b00" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__fd_mask" ref="0x7f1e52495c70"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x7f1e52db2ce0" size="V:" alignment="V:">
    </attribute>
    <enum loc="144:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d10a00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="43:/opt/tinyos-main/tos/lib/timer/Timer.h" ref="0x7f1e51dd7460" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7f1e51dd7670" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="pack" loc="20:includes/packet.h" ref="0x7f1e51dcb690" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x7f1e51dca660" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7f1e51dca710" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x7f1e51dca7c0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
      <field name="TTL" ref="0x7f1e51dca870" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="protocol" ref="0x7f1e51dca920" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x7f1e51dca9d0" bit-offset="I:64" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="4:includes/lsp.h" ref="0x7f1e51dc5300" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_marker" loc="160:/usr/include/libio.h" ref="0x7f1e5220f020" defined="" size="I:24" alignment="I:8">
      <field name="_next" ref="0x7f1e5220f910" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x7f1e5220f020"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x7f1e5220f9c0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x7f1e5220fa70" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sendInfo" loc="12:includes/sendInfo.h" ref="0x7f1e51976550" defined="" size="I:32" alignment="I:2">
      <field name="packet" ref="0x7f1e51976d20" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
          <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
        </type-tag>
      </field>
      <field name="src" ref="0x7f1e51976dd0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7f1e51976e80" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="9:includes/protocol.h" ref="0x7f1e51dd6370" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="87:/opt/tinyos-main/tos/lib/serial/Serial.h" ref="0x7f1e51e4d4e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="random_data" loc="343:/usr/include/stdlib.h" ref="0x7f1e5246e370" defined="" size="I:48" alignment="I:8">
      <field name="fptr" ref="0x7f1e5246d2d0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7f1e52d9c1a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x7f1e5246d380" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7f1e52d9c1a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x7f1e5246d430" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7f1e52d9c1a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x7f1e5246d4e0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x7f1e5246d590" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x7f1e5246d640" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x7f1e5246d6f0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7f1e52d9c1a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <struct loc="44:/opt/tinyos-main/tos/lib/timer/Timer.h" ref="0x7f1e51dd7c10" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7f1e51dd7e20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="76:/opt/tinyos-main/tos/lib/tossim/tos.h" ref="0x7f1e521732f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="82:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517ead40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="26:/opt/tinyos-main/tos/types/AM.h" ref="0x7f1e51e54850" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="315:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517bdc10" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x7f1e517bde20" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x7f1e517bded0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x7f1e517bb020" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x7f1e517bb0d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x7f1e517bb180" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x7f1e517bb230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7f1e517bb2e0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x7f1e51f5f020" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x7f1e51f5e470" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x7f1e51f5e520" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x7f1e51f5e5d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x7f1e51f5e680" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x7f1e51f5e730" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x7f1e51f5e7e0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x7f1e51f5e890" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x7f1e51f5e940" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x7f1e51f5e9f0" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x7f1e51f5eaa0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x7f1e51f5eb50" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/opt/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7f1e5213ed90" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x7f1e5213c440" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x7f1e5213c4f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/>
              <typename><typedef-ref name="FILE" ref="0x7f1e52218be0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct loc="170:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517daa10" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x7f1e517dac20" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x7f1e517dacd0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x7f1e517dad80" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x7f1e517dae30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7f1e517daee0" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x7f1e517d8020" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="673:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x7f1e51da0280" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="250:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517ccbf0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517cce00" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517cceb0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517cc4e0"/></type-tag>
      </field>
    </union>
    <enum loc="63:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517edc20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/opt/tinyos-main/tos/lib/serial/Serial.h" ref="0x7f1e51e4ab50" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x7f1e51e485c0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x7f1e51e48670" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x7f1e51e48720" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x7f1e51e487d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x7f1e51e48880" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x7f1e51e48930" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x7f1e51e489e0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x7f1e51e48a90" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x7f1e51e48b40" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x7f1e51e48bf0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x7f1e51e48ca0" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="dmemset" loc="15:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52da6080" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x7f1e52da6550" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x7f1e52da6600" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x7f1e52da66b0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="one_nok" loc="14:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52da7670" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7f1e52da79e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="51:/opt/tinyos-main/tos/types/TinyError.h" ref="0x7f1e52daedd0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atleastonce" loc="98:/opt/tinyos-main/tos/lib/tossim/tos.h" ref="0x7f1e52148720" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct name="itimerval" loc="107:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7f1e52063b00" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x7f1e52062260" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x7f1e52496e20"/></type-tag>
      </field>
      <field name="it_value" ref="0x7f1e52062310" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x7f1e52496e20"/></type-tag>
      </field>
    </struct>
    <union loc="155:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e5247b080" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7f1e5247b290" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e5247b340" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="230:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e52474830" defined="" size="I:32" alignment="I:8">
      <field name="__size" ref="0x7f1e52474a40" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e52474af0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="140:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e5247e530" defined="" size="I:48" alignment="I:8">
      <field name="__lock" ref="0x7f1e5247e740" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x7f1e5247e7f0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x7f1e5247e8a0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x7f1e5247e950" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x7f1e5247ea00" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x7f1e5247eab0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x7f1e5247eb60" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x7f1e5247ec10" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="cc2420_header_t" loc="60:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cee080" defined="" size="I:12" alignment="I:1">
      <field name="length" ref="0x7f1e51ced3b0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7f1e52536a50"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x7f1e51ced460" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7f1e525351f0"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x7f1e51ced510" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7f1e52536a50"/></typename>
        </type-int>
      </field>
      <field name="destpan" ref="0x7f1e51ced5c0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7f1e525351f0"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7f1e51ced670" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7f1e525351f0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7f1e51ced720" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7f1e525351f0"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x7f1e51ced7d0" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7f1e52536a50"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7f1e51ced880" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7f1e52536a50"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <attribute name="count_nok" loc="12:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52da82d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x7f1e52da8610" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="43:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d1e080" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_rxctrl0_enums" loc="294:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ccabb0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sigevent" ref="0x7f1e51f5c810" size="V:" alignment="V:">
    </struct>
    <struct name="socket_store_t" loc="37:includes/socket.h" ref="0x7f1e51970020" defined="" size="I:280" alignment="I:4">
      <field name="flag" ref="0x7f1e5196e640" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="inUse" ref="0x7f1e5196e6f0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="fd" ref="0x7f1e5196e7a0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
        </type-int>
      </field>
      <field name="state" ref="0x7f1e5196e850" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><enum-ref name="socket_state" ref="0x7f1e51973490"/></type-tag>
      </field>
      <field name="src" ref="0x7f1e5196e900" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="socket_port_t" ref="0x7f1e51972a70"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7f1e5196e9b0" bit-offset="I:72" size="I:3">
        <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7f1e51972e10"/>
          <typename><typedef-ref name="socket_addr_t" ref="0x7f1e519717a0"/></typename>
        </type-tag>
      </field>
      <field name="sendBuff" ref="0x7f1e5196ea60" bit-offset="I:96" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="lastWritten" ref="0x7f1e5196eb10" bit-offset="I:1120" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="lastAck" ref="0x7f1e5196ebc0" bit-offset="I:1128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="lastSent" ref="0x7f1e5196ec70" bit-offset="I:1136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="rcvdBuff" ref="0x7f1e5196ed20" bit-offset="I:1144" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="lastRead" ref="0x7f1e5196edd0" bit-offset="I:2168" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="lastRcvd" ref="0x7f1e5196ee80" bit-offset="I:2176" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="nextExpected" ref="0x7f1e5196c120" bit-offset="I:2184" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="RTT" ref="0x7f1e5196c1d0" bit-offset="I:2192" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
        </type-int>
      </field>
      <field name="effectiveWindow" ref="0x7f1e5196c280" bit-offset="I:2208" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="153:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517dc6b0" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x7f1e517dc8c0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x7f1e517dc970" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x7f1e517dca20" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x7f1e517dcad0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x7f1e517dcb80" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x7f1e517dcc30" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x7f1e517dcce0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x7f1e517dcd90" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="cc2420_security_enums" loc="385:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cbaea0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52da8c30" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7f1e52da7020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="27:/usr/include/x86_64-linux-gnu/bits/sigset.h" ref="0x7f1e524978b0" defined="" size="I:128" alignment="I:8">
      <field name="__val" ref="0x7f1e52497ac0" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <enum name="cc2420_fsmtc_enums" loc="372:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cbccb0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_data" ref="0x7f1e5251b890" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x7f1e52db2080" size="V:" alignment="V:">
    </attribute>
    <enum loc="50:/usr/include/x86_64-linux-gnu/bits/waitflags.h" ref="0x7f1e524e4020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="134:/usr/include/x86_64-linux-gnu/bits/types.h" ref="0x7f1e524d8290" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x7f1e524d84a0" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="snr_lqi" loc="9:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h" ref="0x7f1e51b26570" defined="" size="I:24" alignment="I:8">
      <field name="snr" ref="0x7f1e51b26d40" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="numLqi" ref="0x7f1e51b26df0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7f1e51b26ea0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
            <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="231:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517cf6e0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517cf8f0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517cf9a0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517d0ed0"/></type-tag>
      </field>
    </union>
    <attribute name="unsafe"  loc="NONE" ref="0x7f1e52db0020" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="cc2420_footer_t" loc="83:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cedda0" defined="" size="I:0" alignment="I:1">
    </nx_struct>
    <union loc="120:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517e2ed0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517e1110" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517e11c0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517e2770"/></type-tag>
      </field>
    </union>
    <union loc="215:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e52476380" defined="" size="I:8" alignment="I:8">
      <field name="__size" ref="0x7f1e52476990" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e52476a40" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="90:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e52483e30" defined="" size="I:40" alignment="I:8">
      <field name="__data" ref="0x7f1e524810a0" bit-offset="I:0" size="I:40">
        <type-tag size="I:40" alignment="I:8"><struct-ref name="__pthread_mutex_s" ref="0x7f1e524841d0"/></type-tag>
      </field>
      <field name="__size" ref="0x7f1e52481150" bit-offset="I:0" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7f1e52481200" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="271:/usr/include/inttypes.h" ref="0x7f1e52d928e0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7f1e52d92af0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7f1e52d92ba0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_mdmctrl0_enums" loc="256:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cd1d90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_mdmctrl1_enums" loc="267:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cce3b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="69:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7f1e524c7620" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x7f1e524c7830" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x7f1e524c78e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x7f1e524c7990" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52da5980" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7f1e52da5cf0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_IO_FILE_plus" ref="0x7f1e52204020" size="V:" alignment="V:">
    </struct>
    <struct loc="41:/opt/tinyos-main/tos/lib/timer/Timer.h" ref="0x7f1e51dd8280" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7f1e51dd8490" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="exception" loc="326:/usr/include/math.h" ref="0x7f1e5224ca20" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x7f1e5224b410" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x7f1e5224b4c0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x7f1e5224b570" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x7f1e5224b620" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x7f1e5224b6d0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="75:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517ea0a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_log_channel" loc="56:/opt/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7f1e5213c9c0" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x7f1e5213b450" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x7f1e5213b500" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x7f1e5213b5b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x7f1e5213b660" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/>
              <typename><typedef-ref name="FILE" ref="0x7f1e52218be0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="126:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d12c40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ce8020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="193:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517d5020" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517d5230" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517d52e0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517d67d0"/></type-tag>
      </field>
    </union>
    <struct loc="150:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d0e590" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x7f1e51d0e7a0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x7f1e51d0e850" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x7f1e51d0e900" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x7f1e51d0e9b0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x7f1e51d0ea60" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x7f1e51d0eb10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="101:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517e7ca0" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x7f1e517e7eb0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x7f1e517e6020" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x7f1e517e60d0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x7f1e517e6180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x7f1e517e6230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x7f1e52db37d0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/opt/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x7f1e52057830" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x7f1e520567c0" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x7f1e52056870" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x7f1e52056920" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x7f1e520569d0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x7f1e52056a80" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x7f1e52056b30" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum name="cc2420_main_enums" loc="247:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cd2380" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="23:includes/command.h" ref="0x7f1e51977780" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="98:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517e6510" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517e6720" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517e67d0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517e7ca0"/></type-tag>
      </field>
    </union>
    <struct loc="176:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e524785f0" defined="" size="I:56" alignment="I:8">
      <field name="__lock" ref="0x7f1e52478800" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x7f1e524788b0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x7f1e52478960" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x7f1e52478a10" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x7f1e52478ac0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x7f1e52478b70" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer" ref="0x7f1e52478c20" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__shared" ref="0x7f1e52478cd0" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__pad1" ref="0x7f1e52478d80" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad2" ref="0x7f1e52478e30" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__flags" ref="0x7f1e52478ee0" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="150:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517db080" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517db290" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517db340" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517dc6b0"/></type-tag>
      </field>
    </union>
    <union loc="297:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517be020" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517be230" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517be2e0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517c0620"/></type-tag>
      </field>
    </union>
    <attribute name="macro"  loc="NONE" ref="0x7f1e52db26b0" size="V:" alignment="V:">
      <field name="macro_name" ref="0x7f1e52db28c0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="42:/opt/tinyos-main/tos/lib/timer/Timer.h" ref="0x7f1e51dd8b40" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7f1e51dd8d50" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="312:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517bb580" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7f1e517bb790" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7f1e517bb840" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e517bdc10"/></type-tag>
      </field>
    </union>
    <struct loc="253:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517cc4e0" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x7f1e517cc6f0" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x7f1e517cc7a0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x7f1e517cc850" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x7f1e517cc900" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="58:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d1db00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_enums" loc="155:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ce7c30" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="22:includes/CommandMsg.h" ref="0x7f1e51dd3b90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_sfdmux_enums" loc="380:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cba3e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h" ref="0x7f1e51d206b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="120:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d12300" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/opt/tinyos-main/tos/types/message.h" ref="0x7f1e51e41e00" defined="" size="I:48" alignment="I:1">
      <field name="header" ref="0x7f1e51e3f0e0" bit-offset="I:0" size="I:11">
        <type-array elements="I:11" size="I:11" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x7f1e51e3f190" bit-offset="I:88" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x7f1e51e3f240" bit-offset="I:312" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x7f1e51e3f2f0" bit-offset="I:328" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/opt/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x7f1e51e523c0" defined="" size="I:11" alignment="I:1">
      <field name="length" ref="0x7f1e51e51670" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x7f1e51e51720" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x7f1e51e517d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7f1e51e51880" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7f1e51e56430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7f1e51e51930" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7f1e51e56430"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x7f1e51e519e0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x7f1e51e56020"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x7f1e51e51a90" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7f1e52536a50"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7f1e51e51b40" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x7f1e51e589d0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct ref="0x7f1e52db7530" size="V:" alignment="V:">
    </struct>
    <enum loc="4:includes/socket.h" ref="0x7f1e51974290" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="6:lib/modules/../../includes/am_types.h" ref="0x7f1e51873550" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="104:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7f1e51d14130" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_config_reg_enums" loc="173:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51ce2020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_noise_node_t" loc="73:/opt/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x7f1e52054170" defined="" size="I:264" alignment="I:8">
      <field name="key" ref="0x7f1e52052b90" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </type-array>
      </field>
      <field name="freqKey" ref="0x7f1e52052c40" bit-offset="I:1024" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x7f1e52052cf0" bit-offset="I:1184" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="noiseGenTime" ref="0x7f1e52052da0" bit-offset="I:1312" size="I:64">
        <type-array elements="I:16" size="I:64" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="noiseTable" ref="0x7f1e52052e50" bit-offset="I:1856" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7f1e52147080"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x7f1e52052f00" bit-offset="I:1920" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x7f1e52050020" bit-offset="I:1984" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x7f1e520500d0" bit-offset="I:2016" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x7f1e52050180" bit-offset="I:2048" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="47:/opt/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7f1e5213e6c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_manfidl_enums" loc="362:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cbd750" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="85:/usr/include/wchar.h" ref="0x7f1e52217da0" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x7f1e52215020" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x7f1e522150d0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <enum name="cc2420_iocfg1_enums" loc="356:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cbe880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x7f1e52db3d50" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/lib/ncc/deputy_nodeputy.h" ref="0x7f1e52da6d00" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x7f1e52da5200" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x7f1e52da52b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x7f1e52da5360" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl1_enums" loc="304:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7f1e51cc8c10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="234:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7f1e517d0ed0" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x7f1e517cf110" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x7f1e517cf1c0" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7f1e517cf270" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x7f1e517cf320" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x7f1e517cf3d0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__pthread_mutex_s" loc="92:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7f1e524841d0" defined="" size="I:40" alignment="I:8">
      <field name="__lock" ref="0x7f1e52483240" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x7f1e524832f0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x7f1e524833a0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x7f1e52483450" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x7f1e52483500" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x7f1e524835b0" bit-offset="I:160" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__elision" ref="0x7f1e52483660" bit-offset="I:176" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__list" ref="0x7f1e52483710" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7f1e52485280"/>
          <typename><typedef-ref name="__pthread_list_t" ref="0x7f1e52485d90"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="53:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x7f1e51e07ba0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7f1e51b2a590" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7f1e51ba5210" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7f1e51b2c350" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="528:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0x7f1e51b28e20" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="69:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0x7f1e51a73910" defined="" scoped="" size="I:72" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x7f1e51a71830" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x7f1e51a718e0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x7f1e51a71990" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x7f1e51a71a40" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x7f1e51a71af0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x7f1e51a71ba0" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7f1e52da2930"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x7f1e51a71c50" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7f1e51a71d00" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x7f1e51a71db0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
            <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x7f1e51a71e60" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7f1e51a73910"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7f1e51a73d80"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="channel" ref="0x7f1e51a71f10" bit-offset="I:512" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7f1e51a6f020" bit-offset="I:520" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="hashmapEntry" loc="21:dataStructures/modules/HashmapC.nc" ref="0x7f1e518aabd0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="HashmapC"/>
      <field name="key" ref="0x7f1e518a9240" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
        </type-int>
      </field>
      <field name="value" ref="0x7f1e518a92f0" bit-offset="U:" size="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e518b2680"/></type-var>
      </field>
    </struct>
    <enum loc="74:lib/modules/SimpleSendP.nc" ref="0x7f1e51826ce0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x7f1e515db6b0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" ref="0x7f1e5160f210" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x7f1e5176b270" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x7f1e515cdca0" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x7f1e515cdeb0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x7f1e515cc020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x7f1e515cc0d0" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x7f1e515cc180" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x7f1e515cc230" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x7f1e515ce680" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x7f1e5152ad00" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x7f1e514dee10" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/opt/tinyos-main/tos/system/AMQueueP.nc" ref="0x7f1e5152d830" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="55:/opt/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x7f1e515236d0" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x7f1e515238e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
            <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="24:lib/modules/CommandHandlerP.nc" ref="0x7f1e514532b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="snr28" ref="0x7f1e51b10a50" loc="23:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr17" ref="0x7f1e51aa8a50" loc="38:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randCM" ref="0x7f1e51f842a0" loc="39:/opt/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x7f1e51eb85c0" loc="298:/opt/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr7" ref="0x7f1e51ae2140" loc="29:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr30" ref="0x7f1e51a9aa10" loc="43:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:7" size="I:112" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current_node" ref="0x7f1e5204b550" loc="52:/opt/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x7f1e51f84b90" loc="41:/opt/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr23" ref="0x7f1e51b12200" loc="22:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__timezone" ref="0x7f1e51f473f0" loc="284:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="snr12" ref="0x7f1e51ab3a10" loc="35:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:16" size="I:256" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr2" ref="0x7f1e51af8090" loc="27:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:42" size="I:672" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="channelTable" ref="0x7f1e5213ae00" loc="68:/opt/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7f1e52147080"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x7f1e51f2cb80" loc="58:/opt/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:264000" alignment="I:8">
        <type-tag size="I:264" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x7f1e52054170"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x7f1e520502e0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="HASHMAP_CHANNEL" ref="0x7f1e51dcedd0" loc="20:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x7f1e5213a9a0" loc="67:/opt/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-array elements="I:272" size="I:4352" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x7f1e5213ed90"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x7f1e5213c650"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x7f1e51f49b30" loc="282:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x7f1e51f85ae0" loc="39:/opt/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="snr21" ref="0x7f1e51b17020" loc="20:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr26" ref="0x7f1e51b205b0" loc="17:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x7f1e51f46900" loc="298:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x7f1e5208ad80" loc="44:/opt/tinyos-main/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/opt/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x7f1e520d6be0"/>
        <typename><typedef-ref name="heap_t" ref="0x7f1e520d4620"/></typename>
      </type-tag>
    </variable>
    <variable name="FLOODING_CHANNEL" ref="0x7f1e51dcf1c0" loc="11:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="SECURITYLOCK" ref="0x7f1e51cb7ac0" loc="399:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="137:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).</short>
        <long> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="snr15" ref="0x7f1e51aafde0" loc="36:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr5" ref="0x7f1e51aee8e0" loc="28:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:46" size="I:736" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x7f1e51fff4d0" loc="54:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x7f1e51f2e600" loc="51:/opt/tinyos-main/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr18" ref="0x7f1e51a9e830" loc="41:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randC" ref="0x7f1e51f85d60" loc="39:/opt/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr10" ref="0x7f1e51abd710" loc="33:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:26" size="I:416" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="FreqKeyNum" ref="0x7f1e51f2c530" loc="56:/opt/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </variable>
    <variable name="snr29" ref="0x7f1e51b0d020" loc="24:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaLow" ref="0x7f1e52001120" loc="47:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x7f1e52000020" loc="50:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr8" ref="0x7f1e51acca00" loc="31:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:34" size="I:544" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr31" ref="0x7f1e51a9b8b0" loc="42:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:3" size="I:48" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numTotal" ref="0x7f1e51f2c020" loc="53:/opt/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x7f1e51f46540" loc="297:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x7f1e520004f0" loc="51:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x7f1e52204460" loc="320:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7f1e52204020"/></type-tag>
    </variable>
    <variable name="allSnr" ref="0x7f1e51a98ad0" loc="45:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:29" size="I:696" alignment="I:8">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x7f1e51b26570"/>
          <typename><typedef-ref name="snr_lqi_t" ref="0x7f1e51b25020"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr24" ref="0x7f1e51b253f0" loc="15:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="COMMAND_CHANNEL" ref="0x7f1e51dd14e0" loc="6:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="randCD" ref="0x7f1e51f84020" loc="39:/opt/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr0" ref="0x7f1e51b0b510" loc="25:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:25" size="I:400" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="j97" ref="0x7f1e51f84840" loc="40:/opt/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr13" ref="0x7f1e51ab6200" loc="34:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:13" size="I:208" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x7f1e52173c70" loc="78:/opt/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x7f1e5217dca0" loc="27:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="snr3" ref="0x7f1e51b04bf0" loc="26:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tzname" ref="0x7f1e51f478d0" loc="289:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x7f1e520cd900" loc="58:/opt/tinyos-main/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x7f1e52db7860"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x7f1e52204dc0" loc="322:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7f1e52204020"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x7f1e52002c90" loc="46:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x7f1e520009c0" loc="52:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x7f1e51d346a0" loc="51:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x7f1e51fc8020" loc="10:/opt/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x7f1e51fca9a0"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x7f1e51fc9230"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr27" ref="0x7f1e51b1da50" loc="18:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TRANSPORT_CHANNEL" ref="0x7f1e51dce490" loc="17:includes/channels.h">
      <type-array elements="I:10" size="I:10" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x7f1e52204910" loc="321:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7f1e52204020"/></type-tag>
    </variable>
    <variable name="snr16" ref="0x7f1e51aa5ae0" loc="39:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x7f1e52002810" loc="45:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr6" ref="0x7f1e51ad75a0" loc="30:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="ROUTING_CHANNEL" ref="0x7f1e51dcfb00" loc="14:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="numCase2" ref="0x7f1e51f2eb50" loc="52:/opt/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr19" ref="0x7f1e51aa2b70" loc="40:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_ticks" ref="0x7f1e5204b170" loc="51:/opt/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
      </type-int>
    </variable>
    <variable name="snr22" ref="0x7f1e51b158f0" loc="21:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__daylight" ref="0x7f1e51f47020" loc="283:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x7f1e521e9e60" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x7f1e51fc9920" loc="9:/opt/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7f1e51fd6510"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x7f1e51fd5020"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="snr11" ref="0x7f1e51ac33d0" loc="32:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:20" size="I:320" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x7f1e5217d7d0" loc="26:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x7f1e521e95a0" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x7f1e5201b620" loc="183:/opt/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="NEIGHBOR_CHANNEL" ref="0x7f1e51dd07d0" loc="10:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="snr20" ref="0x7f1e51b1a330" loc="19:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x7f1e5204b8d0" loc="53:/opt/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x7f1e5224c6f0" loc="313:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7f1e5224d020"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x7f1e5224c280"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x7f1e51fc8370" loc="11:/opt/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr25" ref="0x7f1e51b238f0" loc="16:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="allSnr_len" ref="0x7f1e51a89180" loc="46:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="signgam" ref="0x7f1e52250810" loc="148:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x7f1e52002380" loc="44:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr14" ref="0x7f1e51aace20" loc="37:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:14" size="I:224" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="stdout" ref="0x7f1e521e9a00" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x7f1e51fff960" loc="55:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x7f1e520015f0" loc="48:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x7f1e51fff020" loc="53:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x7f1e52001ac0" loc="49:/opt/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="GENERAL_CHANNEL" ref="0x7f1e51dd1e00" loc="7:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="i97" ref="0x7f1e51f845e0" loc="40:/opt/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x7f1e51e05910" loc="66:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x7f1e51e05020" loc="60:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x7f1e51e06b60" loc="59:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x7f1e51e054d0" loc="61:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:14" size="I:14" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x7f1e51e05e60" loc="67:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
      </type-tag>
    </variable>
    <variable name="radioChannel" ref="0x7f1e51cac4c0" loc="56:/opt/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="bootEvent" ref="0x7f1e51cac110" loc="54:/opt/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x7f1e51cb49a0" loc="52:/opt/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x7f1e51cb45e0" loc="51:/opt/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x7f1e51cb4ce0" loc="53:/opt/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x7f1e51c19090" loc="62:/opt/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
        <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x7f1e51c194a0" loc="63:/opt/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
          <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x7f1e51b971e0" loc="78:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x7f1e51ba1c10" loc="70:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x7f1e51b39b50" loc="294:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x7f1e51b995c0" loc="72:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x7f1e51b999a0" loc="73:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x7f1e51b99d70" loc="74:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
          <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x7f1e51b990d0" loc="71:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x7f1e51b975b0" loc="80:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
        <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x7f1e51b98920" loc="76:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x7f1e51b98420" loc="75:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x7f1e51b98da0" loc="77:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x7f1e51a3e370" loc="206:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x7f1e51a743a0" loc="61:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x7f1e51a3fa00" loc="203:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x7f1e51a735e0" loc="65:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x7f1e51a3d160" loc="208:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x7f1e51a6f410" loc="84:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7f1e51a73910"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7f1e51a73d80"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x7f1e51a3e890" loc="207:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
          <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="rssi" ref="0x7f1e51a74b90" loc="63:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="clearThreshold" ref="0x7f1e51a3fd90" loc="205:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x7f1e51a73090" loc="64:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x7f1e51a74020" loc="60:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
          <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x7f1e51a74710" loc="62:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x7f1e5198e460" loc="68:/opt/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x7f1e5198e0d0" loc="67:/opt/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x7f1e5198fbd0" loc="66:/opt/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="sendPack" ref="0x7f1e5193e5e0" loc="42:Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
        <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
      </type-tag>
    </variable>
    <variable name="container" ref="0x7f1e518e10d0" loc="16:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f1e518eb940"/></type-var>
      </type-array>
    </variable>
    <variable name="MAX_SIZE" ref="0x7f1e518e2a90" loc="14:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x7f1e518e1440" loc="17:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="numofVals" ref="0x7f1e518a7170" loc="28:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="HASH_MAX_SIZE" ref="0x7f1e518aa220" loc="16:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="map" ref="0x7f1e518a9900" loc="26:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x7f1e518aabd0"/>
          <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x7f1e518a9450"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="EMPTY_KEY" ref="0x7f1e518aa740" loc="19:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="keys" ref="0x7f1e518a9da0" loc="27:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sequenceNum" ref="0x7f1e518441e0" loc="30:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="pkt" ref="0x7f1e51844b00" loc="32:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
        <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
      </type-tag>
    </variable>
    <variable name="busy" ref="0x7f1e51844660" loc="31:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x7f1e5176b020" loc="40:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x7f1e51771940" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x7f1e517715e0" loc="38:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x7f1e51771ba0" loc="39:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x7f1e516ffab0" loc="80:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x7f1e516ff5c0" loc="74:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x7f1e51650170" loc="480:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x7f1e516dd020" loc="185:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x7f1e51705c70" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x7f1e51705780" loc="57:/opt/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x7f1e516047c0" loc="55:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x7f1e51604b30" loc="56:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x7f1e515ccc30" loc="69:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x7f1e515cc870" loc="68:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x7f1e515cdca0"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x7f1e515cc390"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="seed" ref="0x7f1e515671a0" loc="52:/opt/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0x7f1e51523dc0" loc="59:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x7f1e51522520" loc="60:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x7f1e515236d0"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x7f1e51523a40"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x7f1e51522db0" loc="61:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="index" ref="0x7f1e514b17f0" loc="61:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x7f1e514b0190" loc="62:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514b8980"/></type-var>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="free" ref="0x7f1e514b1480" loc="60:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="pool" ref="0x7f1e514b0630" loc="63:/opt/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f1e514b8980"/></type-var>
      </type-array>
    </variable>
    <variable name="tail" ref="0x7f1e514845a0" loc="50:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x7f1e51484a40" loc="51:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x7f1e51485d80" loc="48:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f1e5148a020"/></type-var>
      </type-array>
      <attribute-value>
        <attribute-ref name="one_nok" ref="0x7f1e52da7670"/>
        <value-structured>
          <type-tag size="I:4" alignment="I:4"><attribute-ref name="one_nok" ref="0x7f1e52da7670"/></type-tag>
        </value-structured>
      </attribute-value>
    </variable>
    <variable name="head" ref="0x7f1e51484100" loc="49:/opt/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </variable>
    <variable name="seqNum" ref="0x7f1e514005e0" loc="22:lib/modules/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="neighborAge" ref="0x7f1e51400ad0" loc="23:lib/modules/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="sendPack" ref="0x7f1e51400260" loc="21:lib/modules/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
        <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
      </type-tag>
    </variable>
    <variable name="seqNum" ref="0x7f1e513a8e30" loc="24:lib/modules/FloodingP.nc">
      <component-ref qname="FloodingP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="lspAge" ref="0x7f1e513a13a0" loc="34:lib/modules/FloodingP.nc">
      <component-ref qname="FloodingP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="sendPack" ref="0x7f1e513a6330" loc="25:lib/modules/FloodingP.nc">
      <component-ref qname="FloodingP"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
        <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
      </type-tag>
    </variable>
    <variable name="lspL" ref="0x7f1e513a1020" loc="33:lib/modules/FloodingP.nc">
      <component-ref qname="FloodingP"/>
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="lspLink" ref="0x7f1e51dc5930"/>
        <typename><typedef-ref name="lspLink" ref="0x7f1e51dc4470"/></typename>
      </type-tag>
    </variable>
    <variable name="tempDest" ref="0x7f1e513a66d0" loc="26:lib/modules/FloodingP.nc">
      <component-ref qname="FloodingP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </variable>
    <variable name="sendLSPL" ref="0x7f1e51311e80" loc="24:lib/modules/LinkStateP.nc">
      <component-ref qname="LinkStateP"/>
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="lspLink" ref="0x7f1e51dc5930"/>
        <typename><typedef-ref name="lspLink" ref="0x7f1e51dc4470"/></typename>
      </type-tag>
    </variable>
    <variable name="lspAge" ref="0x7f1e51310220" loc="25:lib/modules/LinkStateP.nc">
      <component-ref qname="LinkStateP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </variable>
    <variable name="sendPack" ref="0x7f1e51311af0" loc="23:lib/modules/LinkStateP.nc">
      <component-ref qname="LinkStateP"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
        <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
      </type-tag>
    </variable>
    <variable name="SockStruct" ref="0x7f1e51288780" loc="29:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7f1e51972e10"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x7f1e519717a0"/></typename>
      </type-tag>
    </variable>
    <variable name="test" ref="0x7f1e512883a0" loc="28:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
      </type-int>
    </variable>
  </variables>
  <constants>
    <constant cst="I:46" name="CC2420_DACTST" ref="0x7f1e51cd8390" loc="219:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACIE" ref="0x7f1e51d58630" loc="1075:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x7f1e51d6d9e0" loc="943:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x7f1e51d4f640" loc="1132:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x7f1e51d5bca0" loc="1058:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x7f1e51d174f0" loc="85:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x7f1e51db5540" loc="140:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x7f1e51dbca70" loc="81:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x7f1e51d85ca0" loc="786:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x7f1e51d34020" loc="1299:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x7f1e51d11a40" loc="133:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x7f1e517d2700" loc="222:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x7f1e51d183f0" loc="80:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x7f1e51d9a330" loc="705:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x7f1e51d6f640" loc="924:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x7f1e51d50980" loc="1126:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x7f1e51d4b020" loc="1154:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x7f1e51d70680" loc="919:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x7f1e51d47680" loc="1182:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_STATUS_TX_UNDERFLOW" ref="0x7f1e51ce3650" loc="169:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="CC2420_FSTST3" ref="0x7f1e51cd9550" loc="215:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x7f1e51d55340" loc="1093:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x7f1e51d53620" loc="1106:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x7f1e51d77ca0" loc="876:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x7f1e51d73ca0" loc="902:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x7f1e51e4b5f0" loc="98:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x7f1e51d9d640" loc="687:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MDMCTRL0_PAN_COORDINATOR" ref="0x7f1e51cd06d0" loc="258:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x7f1e51d769a0" loc="882:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x7f1e524e4200" loc="52:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x7f1e51d91020" loc="763:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x7f1e51d6a660" loc="961:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_CCM" ref="0x7f1e51cb9bf0" loc="389:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x7f1e51d979c0" loc="730:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x7f1e51d38660" loc="1275:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x7f1e5224d3b0" loc="303:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x7f1e517d1870" loc="227:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SYN_SENT" ref="0x7f1e51973e40" loc="17:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SYN_RCVD" ref="0x7f1e51972110" loc="18:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x7f1e51d79020" loc="858:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x7f1e51d709a0" loc="920:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_TXCTRL_TXMIX_CURRENT" ref="0x7f1e51ccbca0" loc="288:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x7f1e517d1190" loc="225:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x7f1e51d1cde0" loc="64:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x7f1e51daa380" loc="269:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x7f1e51d99950" loc="714:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="CC2420_MANOR" ref="0x7f1e51cdb8a0" loc="207:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x7f1e51d7c020" loc="839:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_SECCTRL0_SEC_RXKEYSEL" ref="0x7f1e51cc2820" loc="331:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x7f1e522417d0" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x7f1e51db23a0" loc="169:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x7f1e51d6d390" loc="939:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x7f1e51d1d4b0" loc="52:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x7f1e51d4e920" loc="1138:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x7f1e51d49020" loc="1166:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x7f1e51da8020" loc="283:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x7f1e51d6bcc0" loc="956:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x7f1e51d45620" loc="1194:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x7f1e51d41c80" loc="1222:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PROTOCOL_NAME" ref="0x7f1e51dd5150" loc="14:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_FSCTRL" ref="0x7f1e51cdd550" loc="197:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RAM_TXFIFO" ref="0x7f1e51cd6150" loc="226:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CTR" ref="0x7f1e51cb8cf0" loc="394:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL1_MODULATION_MODE" ref="0x7f1e51ccd020" loc="270:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x7f1e517ed020" loc="58:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x7f1e51d7b340" loc="847:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x7f1e51d56340" loc="1086:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x7f1e51d9ec80" loc="684:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="MAX_LSP" ref="0x7f1e51dc55f0" loc="6:includes/lsp.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDL_MANFID" ref="0x7f1e51cbde70" loc="364:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x7f1e51da7900" loc="298:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x7f1e51d926b0" loc="760:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x7f1e51d80640" loc="817:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x7f1e51d63020" loc="1004:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x7f1e517d3500" loc="217:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x7f1e51dc0d90" loc="36:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_TXCTRL_TXMIX_CAP_ARRAY" ref="0x7f1e51ccb8b0" loc="287:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x7f1e51d7c950" loc="844:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x7f1e51d41660" loc="1218:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x7f1e51d3dca0" loc="1246:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LISTEN" ref="0x7f1e519738f0" loc="15:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="CC2420_MANAND" ref="0x7f1e51cdb540" loc="206:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x7f1e51d6b3a0" loc="953:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x7f1e51d13190" loc="109:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x7f1e517d2db0" loc="224:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x7f1e51d73980" loc="901:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL0_SEC_CBC_HEAD" ref="0x7f1e51cc3b80" loc="328:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x7f1e51db2020" loc="166:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x7f1e51d20d80" loc="128:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x7f1e517eaab0" loc="78:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x7f1e517e89a0" loc="94:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x7f1e51d52330" loc="1112:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x7f1e517ee020" loc="54:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x7f1e51d953b0" loc="740:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x7f1e51d55020" loc="1092:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x7f1e51d3a020" loc="1261:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x7f1e52245070" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x7f1e51e4a810" loc="106:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x7f1e51dbe020" loc="47:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_SACK" ref="0x7f1e51ce06f0" loc="184:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_PACKET_HEADER_LENGTH" ref="0x7f1e51dd4250" loc="11:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x7f1e51db1540" loc="182:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDH_PARTNUM" ref="0x7f1e51cbc940" loc="369:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x7f1e51db31e0" loc="154:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x7f1e52059df0" loc="56:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x7f1e51d6c9d0" loc="948:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x7f1e51d64cc0" loc="1003:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_IOCFG0_BCN_ACCEPT" ref="0x7f1e51cbf140" loc="348:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_RXCTRL1_HIGH_HGM" ref="0x7f1e51cc6020" loc="309:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="MAX_TTL" ref="0x7f1e51dcb370" loc="16:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x7f1e51d86680" loc="779:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x7f1e51d81970" loc="811:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x7f1e51d7f320" loc="821:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x7f1e51d3bc20" loc="1258:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x7f1e51d83020" loc="794:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x7f1e51d37940" loc="1283:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x7f1e51d64020" loc="997:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x7f1e51d16330" loc="89:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x7f1e517e9690" loc="85:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x7f1e51db03a0" loc="194:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CMD_ERROR" ref="0x7f1e51977530" loc="20:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x7f1e51d90980" loc="773:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="MAC_PACKET_SIZE" ref="0x7f1e51ce72c0" loc="150:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x7f1e51d9e330" loc="679:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x7f1e51d97680" loc="727:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x7f1e51d1bb10" loc="68:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x7f1e51d1a520" loc="71:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x7f1e51d98980" loc="721:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x7f1e51e4db80" loc="89:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSMTC_TC_TXEND2PAOFF" ref="0x7f1e51cba070" loc="377:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x7f1e51d60640" loc="1025:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x7f1e517d3850" loc="218:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x7f1e51d10d80" loc="145:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x7f1e5224d630" loc="304:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="CC2420_BATTMON" ref="0x7f1e51cdc020" loc="200:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x7f1e5238fdb0" loc="56:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x7f1e51d0f1b0" loc="146:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x7f1e51daa700" loc="272:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG1_CCAMUX" ref="0x7f1e51cbd3d0" loc="359:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL0_MED_LNA_GAIN" ref="0x7f1e51cc9810" loc="297:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x7f1e51d39330" loc="1267:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x7f1e51d36660" loc="1289:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x7f1e51d60c70" loc="1027:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_NONCE_FLAGS" ref="0x7f1e51cd2020" loc="244:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x7f1e51d4c330" loc="1148:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x7f1e51d48950" loc="1176:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x7f1e51d43020" loc="1204:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x7f1e51d3f660" loc="1232:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="CC2420_MDMCTRL1" ref="0x7f1e51cde020" loc="191:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x7f1e51d84c80" loc="793:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x7f1e51d6e680" loc="933:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x7f1e51d40c20" loc="1227:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x7f1e51d85020" loc="782:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x7f1e51d67640" loc="980:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x7f1e51d3b320" loc="1255:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RSSI_CCA_THR" ref="0x7f1e51ccde60" loc="276:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x7f1e517ee3d0" loc="55:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x7f1e51d5f020" loc="1030:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x7f1e51dbea80" loc="54:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x7f1e51dbf140" loc="39:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x7f1e51dab8f0" loc="264:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x7f1e51d98020" loc="718:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x7f1e517ee790" loc="56:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x7f1e51daf8d0" loc="216:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x7f1e51d82340" loc="802:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x7f1e51d38ca0" loc="1277:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x7f1e51d35680" loc="1296:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x7f1e51d9cc90" loc="696:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x7f1e51d79640" loc="860:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x7f1e51d50020" loc="1123:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x7f1e51dad550" loc="238:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x7f1e51e4bbb0" loc="103:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x7f1e51db51d0" loc="139:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x7f1e51d4c670" loc="1151:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_TXCTRL_RESERVED" ref="0x7f1e51cca470" loc="290:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="NO_SEC" ref="0x7f1e51cb8020" loc="390:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x7f1e51d54c50" loc="1103:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x7f1e51db8710" loc="134:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_SACKPEND" ref="0x7f1e51ce0a70" loc="185:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x7f1e51d10410" loc="139:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x7f1e51d51330" loc="1117:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x7f1e51d4d950" loc="1145:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x7f1e51d48020" loc="1173:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x7f1e51d44650" loc="1201:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x7f1e51d11d90" loc="134:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSCTRL_LOCK_STATUS" ref="0x7f1e51cc4bc0" loc="322:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x7f1e52058d00" loc="60:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x7f1e51da9540" loc="278:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="CC2420_RAM_RXFIFO" ref="0x7f1e51cd64e0" loc="227:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x7f1e51d969d0" loc="735:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x7f1e51d39ca0" loc="1272:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x7f1e517ed7b0" loc="60:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x7f1e51d39020" loc="1266:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x7f1e51d36350" loc="1288:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x7f1e517d1500" loc="226:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SFLUSHRX" ref="0x7f1e51ce0020" loc="182:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CBC_MAC_4" ref="0x7f1e51cb8360" loc="391:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x7f1e51d7b970" loc="849:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x7f1e51d7cc70" loc="845:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x7f1e51d71660" loc="912:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x7f1e51d209e0" loc="127:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x7f1e51d77340" loc="873:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x7f1e52316ac0" loc="60:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL0_LOW_LNA_GAIN" ref="0x7f1e51cc9c00" loc="298:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x7f1e51d61c90" loc="1022:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x7f1e51d19360" loc="75:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x7f1e51da7c90" loc="301:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x7f1e51da6b20" loc="313:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x7f1e52240620" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x7f1e51d5e990" loc="1040:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x7f1e51d56020" loc="1085:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x7f1e51d7fc70" loc="826:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="CC2420_FSTST0" ref="0x7f1e51cdaa70" loc="212:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x7f1e51d12660" loc="121:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x7f1e51daee10" loc="232:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x7f1e51d74980" loc="894:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x7f1e51d69670" loc="968:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SXOSCOFF" ref="0x7f1e51ce1bb0" loc="181:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG1_HSSD_SRC" ref="0x7f1e51cbebe0" loc="357:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x7f1e51d80020" loc="815:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x7f1e51dbb1c0" loc="87:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x7f1e51d9a650" loc="706:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x7f1e51d46660" loc="1187:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x7f1e51d42ca0" loc="1215:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x7f1e51d3d340" loc="1243:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x7f1e51db18b0" loc="185:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x7f1e51db2e10" loc="176:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_TXCTRL_PA_LEVEL" ref="0x7f1e51cca830" loc="291:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x7f1e51d6b070" loc="950:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x7f1e51da8710" loc="287:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x7f1e51d1c4b0" loc="61:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x7f1e51d19020" loc="74:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x7f1e51d14ad0" loc="107:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x7f1e51d3e640" loc="1237:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x7f1e51db3c50" loc="163:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x7f1e51d94390" loc="745:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_NONCE_FRAME_COUNTER" ref="0x7f1e51cd3810" loc="242:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x7f1e51db8dd0" loc="136:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x7f1e51daa020" loc="268:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x7f1e51d86020" loc="775:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x7f1e52316460" loc="58:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x7f1e51d1a1e0" loc="70:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x7f1e51d1abb0" loc="73:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x7f1e5205a7e0" loc="52:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x7f1e51d171b0" loc="84:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x7f1e51d80940" loc="818:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x7f1e51d57660" loc="1082:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x7f1e51d6c070" loc="945:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CC2420_SECCTRL0" ref="0x7f1e51cdd8d0" loc="198:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x7f1e51d4fc40" loc="1134:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x7f1e51d4a320" loc="1162:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x7f1e51db4390" loc="146:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x7f1e51daca80" loc="254:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CMD_PING" ref="0x7f1e51dc2bf0" loc="13:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x7f1e51dc0330" loc="27:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x7f1e51dba020" loc="99:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x7f1e51d4f020" loc="1128:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x7f1e51d4b660" loc="1156:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x7f1e51d47cc0" loc="1184:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x7f1e51d42340" loc="1212:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x7f1e51d71020" loc="910:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_IOCFG0_SFD_POLARITY" ref="0x7f1e51cbfd20" loc="351:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x7f1e51d9b970" loc="700:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x7f1e51d5d640" loc="1044:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x7f1e51d63340" loc="1005:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="CC2420_AGCTST0" ref="0x7f1e51cda020" loc="209:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x7f1e51d53c20" loc="1108:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x7f1e51d65020" loc="992:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x7f1e51d90020" loc="770:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SECCTRL0_SEC_TXKEYSEL" ref="0x7f1e51cc2420" loc="330:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x7f1e51d9dc60" loc="689:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x7f1e51d61970" loc="1021:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x7f1e517d7760" loc="189:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x7f1e51d75020" loc="884:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x7f1e51d91640" loc="765:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x7f1e51d12970" loc="122:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x7f1e517d31b0" loc="216:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x7f1e51d73020" loc="896:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_BATTMON_BATTMON_EN" ref="0x7f1e51cc0610" loc="343:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x7f1e51d7c620" loc="841:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PROTOCOL_DV" ref="0x7f1e51dd5800" loc="16:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x7f1e51d5c990" loc="1052:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x7f1e5205abf0" loc="53:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x7f1e51d6a970" loc="962:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="CC2420_RXCTRL0" ref="0x7f1e51cdedd0" loc="195:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STATUS_LOCK" ref="0x7f1e51ce4570" loc="166:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x7f1e51dbf7e0" loc="43:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x7f1e51d6ece0" loc="937:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x7f1e51d49620" loc="1168:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x7f1e51d45c20" loc="1196:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x7f1e51d40320" loc="1224:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x7f1e51d3c960" loc="1252:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL1_LNA_CAP_ARRAY" ref="0x7f1e51cc67e0" loc="311:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSCTRL_FREQ" ref="0x7f1e51cc3020" loc="323:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x7f1e51d56980" loc="1088:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x7f1e51d9d330" loc="686:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x7f1e51d66020" loc="985:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x7f1e51d199e0" loc="77:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x7f1e52250dc0" loc="191:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="PACKET_MAX_PAYLOAD_SIZE" ref="0x7f1e51dcb020" loc="15:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x7f1e51da7570" loc="295:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x7f1e517e8070" loc="91:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_NONCE_SOURCE_ADDRESS" ref="0x7f1e51cd3c00" loc="243:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x7f1e520585d0" loc="58:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x7f1e517ebbe0" loc="71:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x7f1e51dbb8b0" loc="93:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x7f1e51d59340" loc="1067:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x7f1e51d3c340" loc="1248:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x7f1e51d7a020" loc="851:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x7f1e52063440" loc="97:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x7f1e51d71970" loc="913:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CMD_KILL" ref="0x7f1e519771d0" loc="19:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x7f1e51d73670" loc="900:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x7f1e51d5a660" loc="1063:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x7f1e51db0710" loc="197:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="CC2420_IOCFG0" ref="0x7f1e51cdc390" loc="201:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x7f1e51d52950" loc="1114:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x7f1e51d4d020" loc="1142:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x7f1e51d92070" loc="756:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x7f1e51d96cf0" loc="736:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x7f1e51d3a640" loc="1263:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x7f1e51d936b0" loc="753:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL1_SEC_TXL" ref="0x7f1e51cc1720" loc="337:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_STATUS_ENC_BUSY" ref="0x7f1e51ce30b0" loc="168:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x7f1e51d939d0" loc="754:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x7f1e51d6e020" loc="929:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x7f1e51d789a0" loc="870:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x7f1e51dad1e0" loc="235:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_TIME_ACK_TURNAROUND" ref="0x7f1e51ce6020" loc="156:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_FSCTRL_LOCK_THR" ref="0x7f1e51cc5af0" loc="318:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x7f1e51d79c70" loc="864:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x7f1e51d65660" loc="994:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:304" name="CC2420_RAM_KEY1" ref="0x7f1e51cd53a0" loc="231:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x7f1e51daf1f0" loc="210:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x7f1e51d64340" loc="998:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x7f1e51d5b340" loc="1055:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x7f1e51d59c90" loc="1072:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x7f1e51d85980" loc="785:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x7f1e51d81020" loc="808:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MAIN_DEMOD_RESETn" ref="0x7f1e51cd2e60" loc="250:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x7f1e51d7f020" loc="820:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x7f1e51d36020" loc="1285:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x7f1e51da6070" loc="304:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x7f1e51db4df0" loc="151:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x7f1e51da8a80" loc="288:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x7f1e51d6b6a0" loc="954:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x7f1e51d57970" loc="1083:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x7f1e51d54020" loc="1097:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x7f1e51d18db0" loc="83:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x7f1e51d134b0" loc="110:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x7f1e5224f4c0" loc="197:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x7f1e51d74020" loc="891:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x7f1e51d97020" loc="723:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL1_RXBPF_MIDCUR" ref="0x7f1e51cc7410" loc="306:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_TIME_SYMBOL" ref="0x7f1e51ce6750" loc="158:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x7f1e51d5dc70" loc="1046:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x7f1e51da9c30" loc="282:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x7f1e51da5390" loc="319:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x7f1e51d36c80" loc="1291:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x7f1e52173590" loc="76:/opt/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x7f1e52316140" loc="57:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x7f1e51d0b020" loc="61:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x7f1e51d47020" loc="1178:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x7f1e51d43640" loc="1206:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x7f1e51d3fc80" loc="1234:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x7f1e51d0c7b0" loc="58:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x7f1e51d82660" loc="803:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="AM_COMMANDMSG" ref="0x7f1e51dd1020" loc="23:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x7f1e517ec020" loc="64:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x7f1e51d946b0" loc="746:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x7f1e5224d8c0" loc="305:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x7f1e51d9c340" loc="691:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x7f1e51d72640" loc="905:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x7f1e51d55650" loc="1094:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_ACK_WAIT_DELAY" ref="0x7f1e51ce5730" loc="161:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSCTRL_CAL_DONE" ref="0x7f1e51cc4020" loc="319:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x7f1e51d1f250" loc="129:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x7f1e51d5fc60" loc="1034:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x7f1e51d4f340" loc="1131:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x7f1e517e99b0" loc="86:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x7f1e51d85660" loc="784:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x7f1e5213ea30" loc="48:/opt/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x7f1e51dc0a10" loc="33:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x7f1e51d35cc0" loc="1298:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x7f1e517e86a0" loc="93:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x7f1e51d9b330" loc="698:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x7f1e51d9a020" loc="704:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PROTOCOL_TCP" ref="0x7f1e51dd54b0" loc="15:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x7f1e51dac390" loc="250:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x7f1e51d6f330" loc="923:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x7f1e51d50660" loc="1125:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x7f1e51d4ccb0" loc="1153:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x7f1e51d47360" loc="1181:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="CC2420_TOPTST" ref="0x7f1e51cd8700" loc="220:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x7f1e51d68c50" loc="977:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_CTR" ref="0x7f1e51cb98a0" loc="388:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CLOSED" ref="0x7f1e51973670" loc="14:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x7f1e51d68320" loc="974:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x7f1e51d53320" loc="1105:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STXON" ref="0x7f1e51ce1140" loc="178:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x7f1e51d196a0" loc="76:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_SXOSCON" ref="0x7f1e51ce2680" loc="175:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x7f1e51d76680" loc="881:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x7f1e51dac020" loc="247:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x7f1e51d92cd0" loc="762:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x7f1e51daaa70" loc="273:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x7f1e51da8390" loc="284:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x7f1e51d96390" loc="733:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x7f1e51d38340" loc="1274:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL0_AUTOCRC" ref="0x7f1e51ccf7c0" loc="262:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x7f1e51d75980" loc="887:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x7f1e51d1b180" loc="65:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x7f1e51d99640" loc="713:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL1_RXMIX_CURRENT" ref="0x7f1e51cc5420" loc="314:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x7f1e51d77980" loc="875:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x7f1e52059480" loc="55:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SFDMUX_SFD" ref="0x7f1e51cba710" loc="381:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL0_AUTOACK" ref="0x7f1e51ccfb90" loc="263:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SRFOFF" ref="0x7f1e51ce1830" loc="180:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL0_HIGH_LNA_GAIN" ref="0x7f1e51cc9420" loc="296:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x7f1e51d4e620" loc="1137:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x7f1e51d4ac20" loc="1165:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x7f1e5223e2b0" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x7f1e51d6b9b0" loc="955:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x7f1e51d45320" loc="1193:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x7f1e51d41980" loc="1221:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESTABLISHED" ref="0x7f1e51973ba0" loc="16:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x7f1e51da6400" loc="307:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x7f1e51d7b020" loc="846:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x7f1e51db2720" loc="172:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x7f1e51d83980" loc="799:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x7f1e51d7e330" loc="828:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x7f1e51d7d330" loc="835:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x7f1e51d93390" loc="752:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x7f1e51d5d020" loc="1042:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CCM_4" ref="0x7f1e51cb7070" loc="395:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_MAIN_ENC_RESETn" ref="0x7f1e51cd2a80" loc="249:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x7f1e51d923a0" loc="759:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x7f1e52242980" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x7f1e51d5f950" loc="1033:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x7f1e517eb400" loc="69:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x7f1e51d9ac90" loc="708:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x7f1e51dba710" loc="105:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x7f1e51d65980" loc="995:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_STXENC" ref="0x7f1e51cdf1e0" loc="187:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x7f1e51d41340" loc="1217:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x7f1e51d3d980" loc="1245:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_SYNCWORD" ref="0x7f1e51cde6f0" loc="193:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x7f1e51da0b90" loc="677:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x7f1e51d9e950" loc="681:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:360" name="CC2420_RAM_PANID" ref="0x7f1e51cd4230" loc="235:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x7f1e51db4710" loc="149:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x7f1e51d1de50" loc="59:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x7f1e51d14490" loc="105:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x7f1e51d52020" loc="1111:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x7f1e51d0cb00" loc="59:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x7f1e51d95d10" loc="743:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x7f1e51d56cc0" loc="1091:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x7f1e51d1be60" loc="69:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x7f1e51d5a020" loc="1061:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x7f1e51d13b00" loc="112:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x7f1e51d18a70" loc="82:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x7f1e51dab1e0" loc="258:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x7f1e51d6c6b0" loc="947:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x7f1e51d4e320" loc="1136:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x7f1e51d649a0" loc="1002:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x7f1e51db58b0" loc="141:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x7f1e51d4a920" loc="1164:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x7f1e51d45020" loc="1192:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:352" name="CC2420_RAM_IEEEADR" ref="0x7f1e51cd5e80" loc="234:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x7f1e5224db50" loc="306:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_ROUTETABLE_DUMP" ref="0x7f1e51978760" loc="16:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x7f1e51d84330" loc="790:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x7f1e51d3b920" loc="1257:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x7f1e51d37640" loc="1282:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x7f1e51d65ca0" loc="996:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_MDMCTRL1_TX_MODE" ref="0x7f1e51ccd3f0" loc="271:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SEND_BUFFER_SIZE" ref="0x7f1e51976220" loc="9:includes/sendInfo.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_RXCTRL1_LOW_LOWGAIN" ref="0x7f1e51cc7800" loc="307:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x7f1e51d90660" loc="772:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="ROOT_SOCKET_ADDR" ref="0x7f1e51974960" loc="7:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MDMCTRL0_RESERVED_FRAME_MODE" ref="0x7f1e51cd02b0" loc="257:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x7f1e51dbdc50" loc="69:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x7f1e51d98660" loc="720:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x7f1e51d62020" loc="1011:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x7f1e51d9e640" loc="680:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL1_DEMOD_AVG_MODE" ref="0x7f1e51cceb40" loc="269:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="CC2420_RXFIFO" ref="0x7f1e51cd8de0" loc="222:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x7f1e51db38e0" loc="160:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x7f1e517d43f0" loc="212:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x7f1e51d1f5e0" loc="130:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x7f1e5220e5f0" loc="184:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL1_CORR_THR" ref="0x7f1e51cce730" loc="268:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x7f1e51d4c020" loc="1147:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x7f1e51d48640" loc="1175:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x7f1e51d44c70" loc="1203:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x7f1e51d3f350" loc="1231:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x7f1e51d81c90" loc="812:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x7f1e51d6e9a0" loc="934:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x7f1e51d44320" loc="1198:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x7f1e51d85340" loc="783:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x7f1e51d67330" loc="979:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x7f1e51d40920" loc="1226:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x7f1e51d3b020" loc="1254:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x7f1e51db9550" loc="119:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x7f1e51d5a980" loc="1064:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PROTOCOL_LINKSTATE" ref="0x7f1e51dd6dc0" loc="13:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x7f1e51d0c020" loc="56:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x7f1e51d67980" loc="983:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x7f1e517ec3c0" loc="65:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x7f1e51d7acb0" loc="857:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x7f1e51d99020" loc="711:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x7f1e51d61660" loc="1020:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x7f1e51d82cb0" loc="807:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x7f1e51db1c30" loc="188:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x7f1e52293140" loc="62:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x7f1e51dbae00" loc="111:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x7f1e51d9c980" loc="695:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x7f1e51d79330" loc="859:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x7f1e51d70020" loc="915:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x7f1e51d70360" loc="918:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x7f1e51d57020" loc="1078:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x7f1e51d51ca0" loc="1122:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STXCAL" ref="0x7f1e51ce29f0" loc="176:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x7f1e51dac710" loc="253:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CMD_TEST_CLIENT" ref="0x7f1e51978ae0" loc="17:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SOCKET_BUFFER_SIZE" ref="0x7f1e51973140" loc="9:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x7f1e51d1a860" loc="72:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x7f1e51dae710" loc="226:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x7f1e5220e310" loc="183:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x7f1e51d58320" loc="1074:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x7f1e51d62330" loc="1012:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x7f1e51d54950" loc="1102:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x7f1e51e4a400" loc="105:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x7f1e51d0c430" loc="57:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x7f1e51d51020" loc="1116:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x7f1e51d4d640" loc="1144:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x7f1e51d49c60" loc="1172:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x7f1e51d966b0" loc="734:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x7f1e51d39980" loc="1271:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x7f1e517d4d60" loc="215:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x7f1e51d3ac60" loc="1265:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x7f1e51d147b0" loc="106:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x7f1e51d99c90" loc="717:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDL_PARTNUM" ref="0x7f1e51cbdab0" loc="363:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x7f1e51d6f970" loc="927:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PROTOCOL_PINGREPLY" ref="0x7f1e51dd6a20" loc="12:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x7f1e51d7b660" loc="848:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x7f1e51d71340" loc="911:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_IOCFG0_CCA_POLARITY" ref="0x7f1e51cbe140" loc="352:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x7f1e51d77020" loc="872:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x7f1e522937a0" loc="64:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x7f1e51d62c30" loc="1015:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x7f1e51d7f640" loc="822:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x7f1e51d17830" loc="86:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_IOCFG0_FIFOP_POLARITY" ref="0x7f1e51cbf930" loc="350:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_BATTMON_BATTMON_VOLTAGE" ref="0x7f1e51cc0a20" loc="344:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x7f1e51d58940" loc="1076:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CC2420_MANFIDL" ref="0x7f1e51cdca70" loc="203:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x7f1e51dbd570" loc="63:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x7f1e51da5720" loc="322:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NO_SEC" ref="0x7f1e51cb91e0" loc="386:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x7f1e517ecb40" loc="67:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x7f1e51d6a340" loc="960:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x7f1e51d6ac70" loc="963:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x7f1e51d68630" loc="975:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x7f1e51d57c80" loc="1084:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x7f1e51d11070" loc="127:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="CC2420_FSTST1" ref="0x7f1e51cdade0" loc="213:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x7f1e51d5c330" loc="1048:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x7f1e524e4480" loc="53:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x7f1e51daea90" loc="229:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="ROOT_SOCKET_PORT" ref="0x7f1e51974cf0" loc="8:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x7f1e51d74660" loc="893:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x7f1e51d7e020" loc="827:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x7f1e51dbc700" loc="78:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_CBC_MAC" ref="0x7f1e51cb9550" loc="387:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SNOP" ref="0x7f1e51ce2310" loc="174:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CBC_MAC_8" ref="0x7f1e51cb86a0" loc="392:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x7f1e51d4bca0" loc="1158:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x7f1e51d84020" loc="789:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x7f1e51d7d950" loc="837:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x7f1e51d46340" loc="1186:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x7f1e51d42980" loc="1214:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x7f1e51d66970" loc="988:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x7f1e51d3d020" loc="1242:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x7f1e517d7400" loc="188:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL0_LOW_LNA_CURRENT" ref="0x7f1e51cc8890" loc="301:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x7f1e51d94d10" loc="750:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x7f1e51d6ccf0" loc="949:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x7f1e51d69020" loc="964:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x7f1e51d69980" loc="969:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x7f1e51d43c60" loc="1208:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x7f1e51d3e330" loc="1236:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x7f1e51d1c7c0" loc="62:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x7f1e51d83ca0" loc="800:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_TXCTRL_TXMIXBUF_CUR" ref="0x7f1e51ccb0b0" loc="285:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x7f1e517d4a30" loc="214:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x7f1e5224ddf0" loc="307:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x7f1e51d94070" loc="744:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x7f1e51d5e330" loc="1036:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x7f1e51dad8c0" loc="241:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x7f1e51d55c70" loc="1096:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MAC_FOOTER_SIZE" ref="0x7f1e51ce8ab0" loc="148:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x7f1e51d6dd00" loc="944:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="CC2420_SECCTRL1" ref="0x7f1e51cddc50" loc="199:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x7f1e51d59660" loc="1068:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x7f1e51d4f940" loc="1133:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x7f1e51d4a020" loc="1161:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x7f1e51dbb530" loc="90:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x7f1e51daf560" loc="213:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STATUS_RSSI_VALID" ref="0x7f1e51ce4020" loc="165:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x7f1e51d5ecb0" loc="1041:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x7f1e5220e020" loc="182:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x7f1e51d9b650" loc="699:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x7f1e51d50ca0" loc="1127:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x7f1e51d4b340" loc="1155:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x7f1e51d479a0" loc="1183:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x7f1e51d42020" loc="1211:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="CC2420_FSTST2" ref="0x7f1e51cd91e0" loc="214:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_NONCE_KEY_SEQ_COUNTER" ref="0x7f1e51cd3420" loc="241:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CCM_16" ref="0x7f1e51cb76d0" loc="397:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x7f1e51d59020" loc="1066:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CCM_8" ref="0x7f1e51cb7390" loc="396:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="CC2420_AGCTST1" ref="0x7f1e51cda390" loc="210:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x7f1e51d53920" loc="1107:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x7f1e51d76020" loc="877:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x7f1e51d72020" loc="903:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x7f1e517ed3e0" loc="59:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x7f1e51d91c90" loc="769:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x7f1e51d9d950" loc="688:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x7f1e51d0daf0" loc="55:/opt/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x7f1e51d14df0" loc="108:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x7f1e51d78660" loc="867:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x7f1e51d76cc0" loc="883:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL0_HIGH_LNA_CURRENT" ref="0x7f1e51cc8070" loc="299:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x7f1e51d91330" loc="764:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x7f1e51da98b0" loc="279:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x7f1e51d97ce0" loc="731:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x7f1e520637d0" loc="101:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x7f1e51d38980" loc="1276:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x7f1e51d35360" loc="1295:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x7f1e51d13e60" loc="116:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SFLUSHTX" ref="0x7f1e51ce03a0" loc="183:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL1_RXMIX_TAIL" ref="0x7f1e51cc6bc0" loc="312:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x7f1e51d7a670" loc="855:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x7f1e51d70cc0" loc="921:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_MAIN" ref="0x7f1e51cdf880" loc="189:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x7f1e51d17b70" loc="87:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x7f1e51d1cad0" loc="63:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x7f1e517d2020" loc="220:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x7f1e51d7c320" loc="840:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x7f1e51db4020" loc="145:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x7f1e51da0560" loc="675:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x7f1e517eb020" loc="68:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x7f1e51db91d0" loc="116:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x7f1e51e4ce40" loc="96:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x7f1e51dbf490" loc="41:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x7f1e5223f460" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x7f1e51d6d070" loc="938:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x7f1e51d61330" loc="1017:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="CC2420_RXCTRL1" ref="0x7f1e51cdd1e0" loc="196:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x7f1e51d49320" loc="1167:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x7f1e51d6a020" loc="957:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x7f1e51d45920" loc="1195:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x7f1e51d40020" loc="1223:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x7f1e51d3c660" loc="1251:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="CC2420_RSSI" ref="0x7f1e51cde370" loc="192:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:336" name="CC2420_RAM_CBCSTATE" ref="0x7f1e51cd5ae0" loc="233:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NONCE_BLOCK_COUNTER" ref="0x7f1e51cd3020" loc="240:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x7f1e517d3bb0" loc="219:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x7f1e51d56660" loc="1087:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x7f1e51d9d020" loc="685:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x7f1e51d86cc0" loc="781:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x7f1e51d7e960" loc="830:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x7f1e51d67c90" loc="984:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x7f1e51d5d950" loc="1045:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x7f1e51d1f990" loc="131:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x7f1e51d7e640" loc="829:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x7f1e51da71e0" loc="292:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_BACKOFF_PERIOD" ref="0x7f1e51ce6d40" loc="159:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="CC2420_AGCTST2" ref="0x7f1e51cda700" loc="211:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x7f1e51d5b980" loc="1057:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x7f1e51dbcdf0" loc="84:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x7f1e51d3c020" loc="1247:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x7f1e51d7bc80" loc="850:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CMD_PACKET_MAX_PAYLOAD_SIZE" ref="0x7f1e51dd48b0" loc="12:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x7f1e51d93cf0" loc="755:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x7f1e5220e900" loc="185:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x7f1e51d5ccb0" loc="1053:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x7f1e51d57350" loc="1081:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x7f1e51dbe710" loc="51:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="CC2420_IOCFG1" ref="0x7f1e51cdc700" loc="202:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_FLOODING" ref="0x7f1e51873860" loc="7:lib/modules/../../includes/am_types.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MAIN_MOD_RESETn" ref="0x7f1e51cd1250" loc="251:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x7f1e52244cb0" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PROTOCOL_PING" ref="0x7f1e51dd6680" loc="11:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x7f1e51e54b50" loc="27:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x7f1e51d52640" loc="1113:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x7f1e51d4ec50" loc="1141:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x7f1e51d956d0" loc="741:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x7f1e51d3a330" loc="1262:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x7f1e51da8df0" loc="289:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_BATTMON_BATT_OK" ref="0x7f1e51cc0230" loc="342:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x7f1e517ea3b0" loc="76:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x7f1e51e4a020" loc="104:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_TIME_VREN" ref="0x7f1e51ce63b0" loc="157:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL1_SEC_RXL" ref="0x7f1e51cc1af0" loc="338:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x7f1e51db3570" loc="157:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x7f1e51db0aa0" loc="202:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x7f1e51d65340" loc="993:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x7f1e51dacdf0" loc="255:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x7f1e5224fbc0" loc="203:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_MAIN_RESETn" ref="0x7f1e51cd26c0" loc="248:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x7f1e52246220" loc="49:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x7f1e51d113e0" loc="128:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x7f1e51e4ca90" loc="95:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x7f1e51dafc50" loc="219:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x7f1e51d81340" loc="809:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x7f1e51d80c40" loc="819:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x7f1e51d37c40" loc="1284:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x7f1e51d83640" loc="796:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MAIN_XOSC16M_BYPASS" ref="0x7f1e51cd1a00" loc="253:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x7f1e51dbee10" loc="57:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x7f1e51d90ca0" loc="774:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x7f1e5238faa0" loc="55:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x7f1e5224f840" loc="200:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x7f1e51d75cc0" loc="890:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x7f1e51dbc390" loc="75:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x7f1e51d98ca0" loc="722:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x7f1e51d1ee30" loc="47:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x7f1e517eeb50" loc="57:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x7f1e51d62930" loc="1014:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x7f1e51d5e020" loc="1035:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x7f1e51d19d20" loc="78:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x7f1e52058980" loc="59:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x7f1e51da91d0" loc="277:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x7f1e51d61020" loc="1016:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SYNCWORD_SYNCWORD" ref="0x7f1e51ccc950" loc="281:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x7f1e517d70b0" loc="187:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x7f1e51d1ea80" loc="46:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x7f1e51d39640" loc="1268:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x7f1e51d36970" loc="1290:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x7f1e51d1b7d0" loc="67:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x7f1e51d5e650" loc="1037:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x7f1e51d80320" loc="816:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x7f1e51d59980" loc="1071:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL1_MED_HGM" ref="0x7f1e51cc63e0" loc="310:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x7f1e517ec780" loc="66:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x7f1e51d48c60" loc="1177:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x7f1e51d43330" loc="1205:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x7f1e51d3f970" loc="1233:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="CC2420_MDMCTRL0" ref="0x7f1e51cdfc00" loc="190:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x7f1e51d84960" loc="792:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x7f1e51d6e360" loc="932:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_MIN_BACKOFF" ref="0x7f1e51ce5370" loc="160:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x7f1e51d3f020" loc="1228:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x7f1e51d3b620" loc="1256:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x7f1e51db2a90" loc="173:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x7f1e51d66330" loc="986:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x7f1e51d37340" loc="1281:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x7f1e517d2390" loc="221:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x7f1e51db8a70" loc="135:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_STXONCCA" ref="0x7f1e51ce14c0" loc="179:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL0_CCA_MOD" ref="0x7f1e51ccf3f0" loc="261:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL0_PREAMBLE_LENGTH" ref="0x7f1e51cce020" loc="264:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x7f1e52293460" loc="63:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x7f1e51d72330" loc="904:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2147483648" name="CC2420_INVALID_TIMESTAMP" ref="0x7f1e51cb63a0" loc="403:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:272" name="SIM_LOG_OUTPUT_COUNT" ref="0x7f1e5213a3d0" loc="64:/opt/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x7f1e51d69ca0" loc="970:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_SFDMUX_XOSC16M_STABLE" ref="0x7f1e51cbab10" loc="382:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x7f1e517eb7f0" loc="70:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x7f1e51e4d7f0" loc="88:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x7f1e51d67020" loc="978:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_RXCTRL1_RXBPF_LOCUR" ref="0x7f1e51cc7020" loc="305:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x7f1e51d84640" loc="791:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x7f1e51d60330" loc="1024:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x7f1e51db0e30" loc="207:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x7f1e51d869a0" loc="780:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x7f1e51d37020" loc="1278:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x7f1e51d359a0" loc="1297:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_FSCTRL_LOCK_LENGTH" ref="0x7f1e51cc47e0" loc="321:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_LENGTH" ref="0x7f1e51977a70" loc="24:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x7f1e517e93a0" loc="84:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x7f1e51d9b020" loc="697:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x7f1e51d9bca0" loc="703:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x7f1e52316780" loc="59:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x7f1e51d79950" loc="861:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x7f1e51db5c30" loc="144:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x7f1e51d72c90" loc="909:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x7f1e51d6f020" loc="922:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x7f1e51d50340" loc="1124:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x7f1e51d4c990" loc="1152:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x7f1e51d53020" loc="1104:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x7f1e51d51640" loc="1118:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x7f1e51d76360" loc="880:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x7f1e51d4dc60" loc="1146:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x7f1e51d929c0" loc="761:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x7f1e51d48330" loc="1174:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x7f1e51d44960" loc="1202:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x7f1e522473d0" loc="48:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x7f1e51d96070" loc="732:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x7f1e51d38020" loc="1273:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:288" name="CC2420_RAM_SABUF" ref="0x7f1e51cd5020" loc="230:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="CC2420_ADCTST" ref="0x7f1e51cd8020" loc="218:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="MAC_HEADER_SIZE" ref="0x7f1e51ce8630" loc="146:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MAIN_FS_RESETn" ref="0x7f1e51cd1610" loc="252:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x7f1e51d9e020" loc="678:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x7f1e51d75660" loc="886:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL0_RXMIXBUF_CUR" ref="0x7f1e51cc9020" loc="295:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x7f1e51d99330" loc="712:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x7f1e51d1b490" loc="66:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x7f1e51d77660" loc="874:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x7f1e51d69340" loc="965:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x7f1e51dab560" loc="261:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x7f1e51db83a0" loc="131:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x7f1e51d5f650" loc="1032:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x7f1e51da5020" loc="316:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_SECCTRL0_SEC_M" ref="0x7f1e51cc2be0" loc="332:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x7f1e51d7dc60" loc="838:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x7f1e51d74ca0" loc="895:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x7f1e51d68020" loc="973:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x7f1e51d60020" loc="1023:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x7f1e51dbbc20" loc="96:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x7f1e51d9a970" loc="707:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:320" name="CC2420_RAM_TXNONCE" ref="0x7f1e51cd5740" loc="232:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x7f1e51d83330" loc="795:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x7f1e51d7a350" loc="854:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x7f1e51d46980" loc="1188:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x7f1e51d41020" loc="1216:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x7f1e51d3d660" loc="1244:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x7f1e51d1e3c0" loc="44:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x7f1e51d62630" loc="1013:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x7f1e5224f170" loc="194:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x7f1e517e90b0" loc="83:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x7f1e51d58020" loc="1073:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x7f1e51d1d870" loc="53:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:272" name="CC2420_RAM_RXNONCE" ref="0x7f1e51cd6c00" loc="229:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x7f1e517ea710" loc="77:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x7f1e517d8d00" loc="186:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x7f1e520590b0" loc="54:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x7f1e51d68940" loc="976:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_SAES" ref="0x7f1e51cdf530" loc="188:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x7f1e51d16020" loc="88:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x7f1e51db8020" loc="128:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x7f1e51d1c1a0" loc="60:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x7f1e52057490" loc="61:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x7f1e51d3e950" loc="1238:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL1_RXMIX_VCM" ref="0x7f1e51cc5020" loc="313:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x7f1e51d959f0" loc="742:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_FSMTC" ref="0x7f1e51cdb1d0" loc="205:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x7f1e51d5c670" loc="1051:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDH_VERSION" ref="0x7f1e51cbc580" loc="368:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x7f1e51d86340" loc="776:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CBC_MAC_16" ref="0x7f1e51cb89f0" loc="393:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x7f1e51d7ec70" loc="831:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x7f1e51d5c020" loc="1047:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x7f1e51d1e770" loc="45:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:62" name="CC2420_TXFIFO" ref="0x7f1e51cd8a70" loc="221:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x7f1e51d6c390" loc="946:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x7f1e51d4e020" loc="1135:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x7f1e51d4a620" loc="1163:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x7f1e51d46ca0" loc="1191:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL0_MED_LNA_CURRENT" ref="0x7f1e51cc8480" loc="300:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x7f1e51e4b230" loc="97:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x7f1e52245e80" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x7f1e51d78340" loc="866:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="PROTOCOL_CMD" ref="0x7f1e51dd5b80" loc="18:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x7f1e51dbfb30" loc="44:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x7f1e51d81650" loc="810:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x7f1e51d63660" loc="1006:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x7f1e51d5b660" loc="1056:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x7f1e51db4a80" loc="150:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL0_SEC_MODE" ref="0x7f1e51cc1020" loc="333:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x7f1e51d64680" loc="1001:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSMTC_TC_SWITCH2TX" ref="0x7f1e51cbb450" loc="374:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_FSCTRL_CAL_RUNNING" ref="0x7f1e51cc4400" loc="320:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x7f1e51d90340" loc="771:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x7f1e51d9c020" loc="690:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x7f1e51d5f330" loc="1031:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x7f1e51dae020" loc="222:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x7f1e517d4710" loc="213:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x7f1e51d75340" loc="885:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x7f1e5238f140" loc="52:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x7f1e5238f770" loc="54:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x7f1e51d98340" loc="719:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x7f1e51d91950" loc="766:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x7f1e51d7f950" loc="823:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="CC2420_RXBPFTST" ref="0x7f1e51cd98d0" loc="216:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x7f1e51daade0" loc="274:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x7f1e51d73340" loc="897:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x7f1e517e8390" loc="92:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x7f1e51d10730" loc="140:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x7f1e51d5a340" loc="1062:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x7f1e51e545a0" loc="15:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x7f1e51d18730" loc="81:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_FSMTC_TC_TXEND2SWITCH" ref="0x7f1e51cbbc20" loc="376:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x7f1e5238f450" loc="53:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_TXCTRL_PA_CURRENT" ref="0x7f1e51cca0b0" loc="289:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x7f1e51d44020" loc="1197:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x7f1e51d82980" loc="804:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x7f1e51d40620" loc="1225:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x7f1e51d3cc60" loc="1253:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x7f1e5223d130" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_SIZE" ref="0x7f1e51ce7880" loc="152:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x7f1e51dbe390" loc="48:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x7f1e51d5b020" loc="1054:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_FSMTC_TC_PAON2TX" ref="0x7f1e51cbb820" loc="375:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x7f1e51db98c0" loc="122:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x7f1e51d7a990" loc="856:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL1_MED_LOWGAIN" ref="0x7f1e51cc7bf0" loc="308:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x7f1e52316e00" loc="61:/opt/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x7f1e51d180b0" loc="79:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x7f1e51d16630" loc="90:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x7f1e51d58c60" loc="1077:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x7f1e51dba3a0" loc="102:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x7f1e51d9c670" loc="694:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x7f1e51d71c80" loc="914:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x7f1e51d51980" loc="1121:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="CC2420_AGCCTRL" ref="0x7f1e51cdbc10" loc="208:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x7f1e51dadc30" loc="244:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x7f1e51db0020" loc="191:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x7f1e51d54650" loc="1101:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x7f1e51db11c0" loc="179:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x7f1e51dabc60" loc="267:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="CC2420_FMSTATE" ref="0x7f1e51cd9c40" loc="217:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x7f1e51d137d0" loc="111:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x7f1e51d52c60" loc="1115:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x7f1e51d4d330" loc="1143:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x7f1e51d49950" loc="1171:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MAX_NUM_OF_SOCKETS" ref="0x7f1e519745d0" loc="6:includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="CC2420_STATUS_XOSC16M_STABLE" ref="0x7f1e51ce3c00" loc="170:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CC2420_MANFIDH" ref="0x7f1e51cdcde0" loc="204:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x7f1e51d95070" loc="737:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x7f1e51d3a950" loc="1264:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_SRXDEC" ref="0x7f1e51ce0de0" loc="186:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CMD_TEST_SERVER" ref="0x7f1e51978e60" loc="18:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_PACK" ref="0x7f1e51dc5090" loc="44:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x7f1e51d6fc80" loc="928:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:362" name="CC2420_RAM_SHORTADR" ref="0x7f1e51cd45d0" loc="236:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x7f1e517f1af0" loc="53:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x7f1e51e52020" loc="28:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MDMCTRL0_ADR_DECODE" ref="0x7f1e51cd0ac0" loc="259:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x7f1e51d78cc0" loc="871:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x7f1e517d2a70" loc="223:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSMTC_TC_RXCHAIN2RX" ref="0x7f1e51cbb070" loc="373:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x7f1e51d7d020" loc="834:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_RAM_KEY0" ref="0x7f1e51cd6860" loc="228:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x7f1e51d63980" loc="1007:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x7f1e51d5aca0" loc="1065:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x7f1e51dbd1e0" loc="60:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x7f1e51da6790" loc="310:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x7f1e51dbc020" loc="72:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL1_RX_MODE" ref="0x7f1e51ccd7c0" loc="272:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x7f1e51d63ca0" loc="1010:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_TXCTRL_TX_TURNAROUND" ref="0x7f1e51ccb4a0" loc="286:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_NEIGHBOR_DUMP" ref="0x7f1e51978020" loc="14:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x7f1e51d1fd20" loc="132:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x7f1e51d54330" loc="1098:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x7f1e520630b0" loc="94:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_SRXON" ref="0x7f1e51ce2d50" loc="177:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x7f1e51d5d330" loc="1043:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x7f1e51d74340" loc="892:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x7f1e51d97340" loc="724:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_IOCFG1_SFDMUX" ref="0x7f1e51cbd020" loc="358:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="PACKET_HEADER_LENGTH" ref="0x7f1e51dcc9a0" loc="14:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x7f1e51dc06a0" loc="30:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x7f1e51dbaa80" loc="108:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x7f1e51d78020" loc="865:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x7f1e51d4b980" loc="1157:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x7f1e51d7d640" loc="836:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x7f1e51d46020" loc="1185:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x7f1e51d66650" loc="987:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x7f1e51d42660" loc="1213:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x7f1e51d3ec90" loc="1241:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x7f1e51da0870" loc="676:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x7f1e51dbd8e0" loc="66:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RSSI_RSSI_VAL" ref="0x7f1e51ccc240" loc="277:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x7f1e51d35020" loc="1292:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_STATUS_TX_ACTIVE" ref="0x7f1e51ce4af0" loc="167:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x7f1e51d93070" loc="751:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x7f1e52173880" loc="76:/opt/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CMD_LINKSTATE_DUMP" ref="0x7f1e519783c0" loc="15:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x7f1e51d43950" loc="1207:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x7f1e520581e0" loc="57:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x7f1e524e4720" loc="54:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x7f1e51d3e020" loc="1235:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SECCTRL0_SEC_SAKEYSEL" ref="0x7f1e51cc2020" loc="329:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x7f1e51db9c30" loc="125:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x7f1e51d6d6c0" loc="942:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x7f1e51dae390" loc="223:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG0_FIFO_POLARITY" ref="0x7f1e51cbf530" loc="349:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x7f1e51d82020" loc="801:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG0_FIFOP_THR" ref="0x7f1e51cbe510" loc="353:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x7f1e52243b30" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x7f1e51d949d0" loc="747:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SECCTRL0_RXFIFO_PROTECTION" ref="0x7f1e51cc3780" loc="327:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x7f1e51d60950" loc="1026:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_MDMCTRL0_CCA_HYST" ref="0x7f1e51ccf020" loc="260:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x7f1e51d72950" loc="906:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="CC2420_TXCTRL" ref="0x7f1e51cdea60" loc="194:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x7f1e51d66c90" loc="989:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x7f1e51d55960" loc="1095:/opt/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x7f1e51e06750" loc="56:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="NUM_TASKS" ref="0x7f1e51e06420" loc="55:/opt/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0x7f1e51b2c160" loc="101:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0x7f1e51ba5020" loc="145:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0x7f1e51b2a1a0" loc="96:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="read_rssi_task" ref="0x7f1e51b28c30" loc="528:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendBufferTask" ref="0x7f1e51826af0" loc="74:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x7f1e5176b530" loc="45:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x7f1e5176b860" loc="46:/opt/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x7f1e5160f020" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x7f1e515ced30" loc="56:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x7f1e515db4c0" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x7f1e515ce9e0" loc="55:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NUM_CLIENTS" ref="0x7f1e5152c0d0" loc="48:/opt/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x7f1e5152ab10" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x7f1e514dec20" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="processCommand" ref="0x7f1e514530c0" loc="24:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x7f1e52d96d10" loc="119:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x7f1e52d96d10"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x7f1e51e44090" loc="134:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x7f1e51e45640"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x7f1e51e44090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x7f1e517cd500" loc="247:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517cf6e0"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x7f1e517cd500"/></typename>
      </type-tag>
    </typedef>
    <typedef name="socket_addr_t" ref="0x7f1e519717a0" loc="30:includes/socket.h">
      <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7f1e51972e10"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x7f1e519717a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x7f1e52474020" loc="225:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x7f1e52474020"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x7f1e52db0e20" loc="324:/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x7f1e52db0e20"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x7f1e51d15e80" loc="99:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e51d159b0"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x7f1e51d15e80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x7f1e5249b830" loc="151:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x7f1e5249b830"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x7f1e51e506a0" loc="22:/opt/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x7f1e51e50080"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x7f1e51e506a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0x7f1e524de900" loc="43:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x7f1e524de900"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x7f1e524df8f0" loc="38:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x7f1e524df8f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x7f1e51e452e0" loc="129:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7f1e51e46190"/>
        <typename><typedef-ref name="serial_header_t" ref="0x7f1e51e452e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x7f1e51dd7020" loc="42:/opt/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd8b40"/>
        <typename><typedef-ref name="TMilli" ref="0x7f1e51dd7020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="cc2420_metadata_t" ref="0x7f1e51cebdb0" loc="108:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="86:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet metadata.</short>
        <long>&#10; CC2420 Packet metadata. Contains extra information about the message&#10; that will not be transmitted.&#10;&#10; Note that the first two bytes automatically take in the values of the&#10; FCS when the payload is full. Do not modify the first two bytes of metadata.&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f1e51cec510"/>
        <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f1e51cebdb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__u_char" ref="0x7f1e524e1170" loc="30:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x7f1e524e1170"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x7f1e517e5420" loc="111:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x7f1e517e5420"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x7f1e517c8c50" loc="278:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x7f1e517c8c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x7f1e524cfda0" loc="186:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__intptr_t" ref="0x7f1e524cfda0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x7f1e524cf5f0" loc="182:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x7f1e524dd130"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x7f1e524cf5f0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x7f1e517e44d0" loc="116:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x7f1e517e44d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x7f1e52492c60" loc="75:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7f1e524928f0"/>
        <typename><typedef-ref name="fd_set" ref="0x7f1e52492c60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x7f1e521721c0" loc="51:/opt/tinyos-main/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7f1e521721c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x7f1e524cf9b0" loc="183:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x7f1e524cf9b0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x7f1e524d6960" loc="139:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__time_t" ref="0x7f1e524d6960"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x7f1e524d0500" loc="172:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ssize_t" ref="0x7f1e524d0500"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x7f1e523f9a90" loc="28:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x7f1e523f9a90"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x7f1e524a1790" loc="70:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x7f1e524a1790"/></typename>
      </type-int>
    </typedef>
    <typedef name="CommandMsg" ref="0x7f1e51dd3940" loc="20:includes/CommandMsg.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="CommandMsg" ref="0x7f1e51dd4c10"/>
        <typename><typedef-ref name="CommandMsg" ref="0x7f1e51dd3940"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x7f1e517cb550" loc="262:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517ccbf0"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x7f1e517cb550"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x7f1e52211bc0" loc="154:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x7f1e52211bc0"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x7f1e52d9a160" loc="67:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x7f1e52d9a160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x7f1e52db7690"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7f1e52db7530"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x7f1e524de500" loc="41:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x7f1e524de500"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x7f1e51dd6020" loc="44:/opt/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd7c10"/>
        <typename><typedef-ref name="TMicro" ref="0x7f1e51dd6020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsword_t" ref="0x7f1e524d0140" loc="170:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsword_t" ref="0x7f1e524d0140"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x7f1e524d2900" loc="166:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x7f1e524d2900"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x7f1e524a1b60" loc="75:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="nlink_t" ref="0x7f1e524a1b60"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x7f1e5249c020" loc="59:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x7f1e5249c020"/></typename>
      </type-int>
    </typedef>
    <typedef name="security_header_t" ref="0x7f1e51cf0ca0" loc="58:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="49:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Security Header&#10;</short>
      </documentation>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="security_header_t" ref="0x7f1e51cf1740"/>
        <typename><typedef-ref name="security_header_t" ref="0x7f1e51cf0ca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x7f1e517c8840" loc="277:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x7f1e517c8840"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_status_t" ref="0x7f1e51cf1240" loc="4:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="33:/opt/tinyos-main/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="cc2420_status_t" ref="0x7f1e51cf1240"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x7f1e5247b4a0" loc="159:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7f1e5247b080"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x7f1e5247b4a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_list_t" ref="0x7f1e52485d90" loc="79:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7f1e52485280"/>
        <typename><typedef-ref name="__pthread_list_t" ref="0x7f1e52485d90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x7f1e520d4620" loc="65:/opt/tinyos-main/tos/lib/tossim/heap.h">
      <documentation loc="53:/opt/tinyos-main/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x7f1e520d6be0"/>
        <typename><typedef-ref name="heap_t" ref="0x7f1e520d4620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x7f1e524da1e0" loc="126:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x7f1e524da1e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x7f1e525351f0" loc="446:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x7f1e525351f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x7f1e5213b7c0" loc="61:/opt/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x7f1e5213c9c0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x7f1e5213b7c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x7f1e524a44d0" loc="35:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x7f1e524a44d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x7f1e5247bc80" loc="167:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x7f1e5247bc80"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x7f1e5249bbc0" loc="152:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x7f1e5249bbc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x7f1e51e56bd0" loc="11:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x7f1e51e56bd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x7f1e517cba10" loc="265:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517ccbf0"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x7f1e517cba10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x7f1e52d9a960" loc="76:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x7f1e52d9a960"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x7f1e524d8600" loc="134:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7f1e524d8290"/>
        <typename><typedef-ref name="__fsid_t" ref="0x7f1e524d8600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x7f1e517cbe60" loc="269:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x7f1e517cbe60"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x7f1e52d96500" loc="106:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast32_t" ref="0x7f1e52d96500"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x7f1e517c9ac0" loc="272:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x7f1e517c9ac0"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x7f1e52489d90" loc="228:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blksize_t" ref="0x7f1e52489d90"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x7f1e52d9a550" loc="69:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x7f1e52d9a550"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x7f1e517bb9a0" loc="324:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517bb580"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f1e517bb9a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x7f1e524d9c90" loc="133:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x7f1e524d9c90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x7f1e524e1920" loc="32:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x7f1e524e1920"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x7f1e517e40d0" loc="115:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x7f1e517e40d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x7f1e517c8430" loc="276:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x7f1e517c8430"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x7f1e52166410" loc="51:/opt/tinyos-main/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7f1e52166020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7f1e52166410"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x7f1e52212670" loc="67:/opt/tinyos-main/tos/types/TinyError.h">
      <documentation loc="34:/opt/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x7f1e52212670"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x7f1e52498db0" loc="22:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x7f1e52498db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x7f1e517d86e0" loc="178:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517d82c0"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x7f1e517d86e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x7f1e524d54e0" loc="143:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x7f1e524d54e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x7f1e524da5d0" loc="127:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino_t" ref="0x7f1e524da5d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_socket_port_t" ref="0x7f1e51972670" loc="22:includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_socket_port_t" ref="0x7f1e51972670"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x7f1e52d9b950" loc="65:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x7f1e52d9b950"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_packet_t" ref="0x7f1e51ce9d00" loc="114:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_packet_t" ref="0x7f1e51ce9300"/>
        <typename><typedef-ref name="cc2420_packet_t" ref="0x7f1e51ce9d00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="FILE" ref="0x7f1e52218be0" loc="48:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/>
        <typename><typedef-ref name="FILE" ref="0x7f1e52218be0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x7f1e5242b5b0" loc="742:/usr/include/stdlib.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x7f1e5242b5b0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x7f1e52518020" loc="39:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x7f1e5251b5f0"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x7f1e52518020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x7f1e51d0d4d0" loc="161:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x7f1e51d0d4d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x7f1e524dad90" loc="129:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x7f1e524dad90"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x7f1e52518430" loc="42:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x7f1e5251b5f0"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x7f1e52518430"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x7f1e51e48e00" loc="121:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x7f1e51e4ab50"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x7f1e51e48e00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x7f1e5249c930" loc="91:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x7f1e5249c930"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x7f1e517c41f0" loc="291:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x7f1e517c41f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x7f1e517c4df0" loc="294:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x7f1e517c4df0"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x7f1e524a13d0" loc="65:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x7f1e524a13d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x7f1e524a3450" loc="39:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7f1e524d8290"/>
        <typename><typedef-ref name="fsid_t" ref="0x7f1e524a3450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x7f1e51e68910" loc="59:/opt/tinyos-main/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x7f1e51e685d0"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x7f1e51e68910"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x7f1e51d0ec70" loc="158:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1e51d0e590"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f1e51d0ec70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x7f1e52da2930" loc="36:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x7f1e52da2930"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x7f1e5213c650" loc="54:/opt/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x7f1e5213ed90"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x7f1e5213c650"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x7f1e52495890" loc="48:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="suseconds_t" ref="0x7f1e52495890"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x7f1e52496090" loc="37:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7f1e524978b0"/>
        <typename><typedef-ref name="sigset_t" ref="0x7f1e52496090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0x7f1e51dd77d0" loc="43:/opt/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd7460"/>
        <typename><typedef-ref name="T32khz" ref="0x7f1e51dd77d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x7f1e524a4120" loc="34:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x7f1e524a4120"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x7f1e51e51ca0" loc="18:/opt/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <documentation loc="14:/opt/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x7f1e51e523c0"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x7f1e51e51ca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x7f1e52db05f0" loc="147:/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x7f1e52db05f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x7f1e51dd85f0" loc="41:/opt/tinyos-main/tos/lib/timer/Timer.h">
      <documentation loc="1:NodeC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7f1e51dd8280"/>
        <typename><typedef-ref name="TSecond" ref="0x7f1e51dd85f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x7f1e524881e0" loc="235:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x7f1e524881e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x7f1e52d9b130" loc="51:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7f1e52d9b130"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x7f1e525330d0" loc="448:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x7f1e525330d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x7f1e5253b020" loc="435:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x7f1e5253b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x7f1e52d94130" loc="122:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x7f1e52d94130"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x7f1e5249f7c0" loc="116:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x7f1e5249f7c0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x7f1e524e1d20" loc="33:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_long" ref="0x7f1e524e1d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x7f1e52d96930" loc="107:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x7f1e52d96930"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x7f1e517c96b0" loc="271:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x7f1e517c96b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x7f1e524dfd00" loc="39:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x7f1e524dfd00"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x7f1e524a5cf0" loc="33:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x7f1e524a5cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x7f1e51d23b00" loc="120:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x7f1e51d23b00"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x7f1e52d97090" loc="92:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast16_t" ref="0x7f1e52d97090"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x7f1e517c8020" loc="275:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x7f1e517c8020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x7f1e517c74a0" loc="280:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x7f1e517c74a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x7f1e521e9020" loc="110:/usr/include/stdio.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7f1e52215eb0"/>
        <typename><typedef-ref name="fpos_t" ref="0x7f1e521e9020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x7f1e517cd020" loc="244:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517cf6e0"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x7f1e517cd020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x7f1e524be440" loc="101:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7f1e524be020"/>
        <typename><typedef-ref name="div_t" ref="0x7f1e524be440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x7f1e51fc9230" loc="6:/opt/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x7f1e51fca9a0"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x7f1e51fc9230"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x7f1e52db0a30" loc="212:/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x7f1e52db0a30"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x7f1e524df4f0" loc="37:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x7f1e524df4f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x7f1e52497c20" loc="30:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7f1e524978b0"/>
        <typename><typedef-ref name="__sigset_t" ref="0x7f1e52497c20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x7f1e517e5020" loc="110:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e6510"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x7f1e517e5020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x7f1e524cf1d0" loc="181:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x7f1e524cf1d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x7f1e524da9d0" loc="128:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x7f1e524da9d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_port_t" ref="0x7f1e51972a70" loc="23:includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="socket_port_t" ref="0x7f1e51972a70"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x7f1e51e589d0" loc="6:/opt/tinyos-main/tos/types/AM.h">
      <documentation loc="34:/opt/tinyos-main/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x7f1e51e589d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x7f1e51e436e0" loc="53:/opt/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:11" alignment="I:1"><union-ref name="message_header" ref="0x7f1e51e44d70"/>
        <typename><typedef-ref name="message_header_t" ref="0x7f1e51e436e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x7f1e51fd5020" loc="57:/opt/tinyos-main/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7f1e51fd6510"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x7f1e51fd5020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x7f1e51e54020" loc="12:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x7f1e51e54020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x7f1e5253c120" loc="433:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x7f1e5253c120"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x7f1e51d0d0d0" loc="160:/opt/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x7f1e51d0d0d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x7f1e52d98020" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x7f1e52d98020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x7f1e521ffc60" loc="358:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x7f1e521ffc60"/></typename>
      </type-function>
    </typedef>
    <typedef name="lspLink" ref="0x7f1e51dc4470" loc="14:includes/lsp.h">
      <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="lspLink" ref="0x7f1e51dc5930"/>
        <typename><typedef-ref name="lspLink" ref="0x7f1e51dc4470"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint8_t" ref="0x7f1e52d9c920" loc="48:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7f1e52d9c920"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x7f1e5249c4a0" loc="75:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x7f1e5249c4a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x7f1e52539cd0" loc="441:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x7f1e52539cd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x7f1e524bdb90" loc="121:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7f1e524bd770"/>
        <typename><typedef-ref name="lldiv_t" ref="0x7f1e524bdb90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x7f1e52206c60" loc="315:/usr/include/libio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x7f1e52206c60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x7f1e52486e70" loc="69:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref name="pthread_attr_t" ref="0x7f1e52486360"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x7f1e52486e70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x7f1e521ff2c0" loc="355:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x7f1e524d9920"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x7f1e521ff2c0"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x7f1e524a0780" loc="98:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x7f1e524a0780"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x7f1e5249cd60" loc="103:/usr/include/time.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x7f1e5249cd60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x7f1e52476ba0" loc="219:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x7f1e52476380"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x7f1e52476ba0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x7f1e517e5820" loc="112:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x7f1e517e5820"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x7f1e524ded10" loc="44:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x7f1e524ded10"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x7f1e524dda30" loc="124:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x7f1e524dda30"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x7f1e52538bc0" loc="443:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x7f1e52538bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pack" ref="0x7f1e51dcab30" loc="28:includes/packet.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7f1e51dcb690"/>
        <typename><typedef-ref name="pack" ref="0x7f1e51dcab30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x7f1e521ebb60" loc="79:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7f1e52db7530"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x7f1e521ebb60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="sendInfo" ref="0x7f1e51974020" loc="16:includes/sendInfo.h">
      <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7f1e51976550"/>
        <typename><typedef-ref name="sendInfo" ref="0x7f1e51974020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__off_t" ref="0x7f1e524d9560" loc="131:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off_t" ref="0x7f1e524d9560"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x7f1e52d98c50" loc="90:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x7f1e52d98c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x7f1e524d4820" loc="158:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt_t" ref="0x7f1e524d4820"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x7f1e51e4fd80" loc="36:/opt/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x7f1e51e50a10"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x7f1e51e4fd80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__syscall_ulong_t" ref="0x7f1e524d0da0" loc="177:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_ulong_t" ref="0x7f1e524d0da0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x7f1e51e567f0" loc="10:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x7f1e51e567f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x7f1e52d94510" loc="134:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x7f1e52d94510"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x7f1e517cfb00" loc="241:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517cf6e0"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f1e517cfb00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x7f1e517e5ca0" loc="114:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e6510"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x7f1e517e5ca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x7f1e51e44a10" loc="138:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x7f1e51e44400"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x7f1e51e44a10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x7f1e524d2090" loc="162:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x7f1e524d2090"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x7f1e52d9cd20" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7f1e52d9cd20"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x7f1e522142f0" loc="25:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7f1e52215eb0"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x7f1e522142f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x7f1e5249a1b0" loc="200:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x7f1e5249a1b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x7f1e517c92a0" loc="270:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x7f1e517c92a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x7f1e517c5990" loc="287:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x7f1e517c5990"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x7f1e51e56020" loc="7:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x7f1e51e56020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x7f1e524d4020" loc="150:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x7f1e524d4020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x7f1e51e41ad0" loc="61:/opt/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_metadata" ref="0x7f1e51e41450"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x7f1e51e41ad0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x7f1e52200130" loc="346:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x7f1e524d0500"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x7f1e52db0a30"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x7f1e52200130"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x7f1e524910d0" loc="82:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fd_mask" ref="0x7f1e524910d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x7f1e5253be60" loc="437:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x7f1e5253be60"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x7f1e52147470" loc="10:/opt/tinyos-main/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7f1e52147080"/>
        <typename><typedef-ref name="hashtable_t" ref="0x7f1e52147470"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x7f1e524a1020" loc="60:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x7f1e524a1020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x7f1e524dd540" loc="53:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x7f1e524dd540"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x7f1e5249acb0" loc="202:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x7f1e5249acb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x7f1e52488a00" loc="243:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x7f1e52488a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x7f1e52d97c50" loc="103:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x7f1e52d97c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x7f1e524e4a40" loc="55:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7f1e524e4020"/>
        <typename><typedef-ref name="idtype_t" ref="0x7f1e524e4a40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__rlim64_t" ref="0x7f1e524d6200" loc="137:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x7f1e524d6200"/></typename>
      </type-int>
    </typedef>
    <typedef name="snr_lqi_t" ref="0x7f1e51b25020" loc="13:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x7f1e51b26570"/>
        <typename><typedef-ref name="snr_lqi_t" ref="0x7f1e51b25020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__key_t" ref="0x7f1e524d5850" loc="144:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x7f1e524d5850"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x7f1e524d6d40" loc="140:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x7f1e524d6d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x7f1e517e1320" loc="130:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e2ed0"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x7f1e517e1320"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x7f1e517c5580" loc="286:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x7f1e517c5580"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x7f1e52201020" loc="338:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x7f1e524d0500"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x7f1e52db0a30"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x7f1e52201020"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x7f1e5253e9e0" loc="432:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x7f1e5253e9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x7f1e52d92020" loc="34:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x7f1e52d92020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x7f1e517c45f0" loc="292:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x7f1e517c45f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x7f1e52498800" loc="205:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x7f1e52498800"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_header_t" ref="0x7f1e51ced9e0" loc="78:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="73:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f1e51cee080"/>
        <typename><typedef-ref name="cc2420_header_t" ref="0x7f1e51ced9e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x7f1e524738e0" loc="240:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7f1e524734c0"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x7f1e524738e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x7f1e517be440" loc="309:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517be020"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f1e517be440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x7f1e517e6930" loc="108:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/opt/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517e6510"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f1e517e6930"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x7f1e5249f020" loc="109:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x7f1e5249f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x7f1e524dd130" loc="52:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x7f1e524dd130"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x7f1e52d9c1a0" loc="38:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x7f1e52d9c1a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x7f1e52d9b530" loc="55:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x7f1e52d9b530"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_store_t" ref="0x7f1e5196c3e0" loc="60:includes/socket.h">
      <type-tag size="I:280" alignment="I:4"><struct-ref name="socket_store_t" ref="0x7f1e51970020"/>
        <typename><typedef-ref name="socket_store_t" ref="0x7f1e5196c3e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_long" ref="0x7f1e524a4890" loc="36:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x7f1e524a4890"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x7f1e51d2ec40" loc="94:/opt/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x7f1e51d2ec40"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_t" ref="0x7f1e51971b90" loc="34:includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="socket_t" ref="0x7f1e51971b90"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x7f1e5224c280" loc="308:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7f1e5224d020"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x7f1e5224c280"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x7f1e52536320" loc="444:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x7f1e52536320"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x7f1e52538490" loc="442:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x7f1e52538490"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x7f1e52486020" loc="60:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_t" ref="0x7f1e52486020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x7f1e524d4410" loc="153:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blksize_t" ref="0x7f1e524d4410"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x7f1e52d92d00" loc="275:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7f1e52d928e0"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x7f1e52d92d00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x7f1e524d91b0" loc="130:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__nlink_t" ref="0x7f1e524d91b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__id_t" ref="0x7f1e524d65a0" loc="138:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x7f1e524d65a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x7f1e517d5920" loc="205:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517d5020"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x7f1e517d5920"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x7f1e52d98410" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x7f1e52d98410"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x7f1e52215770" loc="94:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7f1e52215350"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x7f1e52215770"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x7f1e51e410d0" loc="57:/opt/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x7f1e51e43a40"/>
        <typename><typedef-ref name="message_footer_t" ref="0x7f1e51e410d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x7f1e517c5170" loc="285:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x7f1e517c5170"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x7f1e524c5910" loc="71:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x7f1e524c5390"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x7f1e524c5910"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x7f1e524d4c00" loc="159:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x7f1e524d4c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x7f1e524885f0" loc="239:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x7f1e524885f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x7f1e524a03d0" loc="86:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x7f1e524a03d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x7f1e524e1570" loc="31:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x7f1e524e1570"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x7f1e5253c830" loc="434:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x7f1e5253c830"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x7f1e524a4c50" loc="37:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x7f1e524a4c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x7f1e524d5160" loc="141:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__suseconds_t" ref="0x7f1e524d5160"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x7f1e52474c50" loc="234:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:8"><union-ref ref="0x7f1e52474830"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x7f1e52474c50"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x7f1e517cb090" loc="259:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517ccbf0"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f1e517cb090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x7f1e524df130" loc="36:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x7f1e524df130"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x7f1e52214e30" loc="30:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7f1e52214a10"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x7f1e52214e30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x7f1e524d5c00" loc="147:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x7f1e524d5c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x7f1e52d960d0" loc="105:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast16_t" ref="0x7f1e52d960d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_footer_t" ref="0x7f1e51cec150" loc="84:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="80:/opt/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet Footer&#10;</short>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><nx_struct-ref name="cc2420_footer_t" ref="0x7f1e51cedda0"/>
        <typename><typedef-ref name="cc2420_footer_t" ref="0x7f1e51cec150"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x7f1e517c7ce0" loc="284:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x7f1e517c7ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x7f1e52d94910" loc="135:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x7f1e52d94910"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x7f1e51e56430" loc="8:/opt/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x7f1e51e56430"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x7f1e524d89c0" loc="135:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__clock_t" ref="0x7f1e524d89c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x7f1e5253b740" loc="436:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x7f1e5253b740"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x7f1e524d8dc0" loc="136:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim_t" ref="0x7f1e524d8dc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x7f1e524a3090" loc="38:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x7f1e524a3090"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x7f1e52d97470" loc="93:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast32_t" ref="0x7f1e52d97470"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x7f1e52d9bd40" loc="66:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x7f1e52d9bd40"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x7f1e524bd020" loc="109:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7f1e524beac0"/>
        <typename><typedef-ref name="ldiv_t" ref="0x7f1e524bd020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x7f1e52498290" loc="203:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x7f1e52498290"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x7f1e5249a730" loc="201:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x7f1e5249a730"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x7f1e517db4a0" loc="163:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517db080"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f1e517db4a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x7f1e517d5e00" loc="208:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517d5020"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x7f1e517d5e00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x7f1e52d98840" loc="80:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x7f1e52d98840"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x7f1e524de130" loc="40:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x7f1e524de130"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x7f1e52477b30" loc="213:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x7f1e52477660"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x7f1e52477b30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x7f1e523f9e10" loc="29:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x7f1e523f9e10"/></typename>
      </type-float>
    </typedef>
    <typedef name="lqi_dist_t" ref="0x7f1e51b26180" loc="7:/opt/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7f1e51b29920"/>
        <typename><typedef-ref name="lqi_dist_t" ref="0x7f1e51b26180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fd_mask" ref="0x7f1e52495c70" loc="54:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fd_mask" ref="0x7f1e52495c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x7f1e52173020" loc="65:/opt/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7f1e52173020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x7f1e524d24c0" loc="163:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x7f1e524d24c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x7f1e52056c90" loc="71:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x7f1e52057830"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x7f1e52056c90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x7f1e52217090" loc="64:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7f1e522187f0"/>
        <typename><typedef-ref name="__FILE" ref="0x7f1e52217090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x7f1e522113d0" loc="40:/usr/lib/gcc/x86_64-linux-gnu/4.9/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7f1e52db7530"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x7f1e522113d0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x7f1e52536a50" loc="445:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x7f1e52536a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x7f1e524d9920" loc="132:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x7f1e524d9920"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x7f1e517c49f0" loc="293:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x7f1e517c49f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x7f1e524d2d30" loc="167:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x7f1e524d2d30"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x7f1e517c78d0" loc="283:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x7f1e517c78d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x7f1e517c5da0" loc="288:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x7f1e517c5da0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x7f1e52d9c550" loc="40:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x7f1e52d9c550"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x7f1e52da2de0" loc="37:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x7f1e52da2de0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x7f1e5249b450" loc="150:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ulong" ref="0x7f1e5249b450"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x7f1e52d97850" loc="94:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x7f1e52d97850"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x7f1e524a0020" loc="80:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x7f1e524a0020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__syscall_slong_t" ref="0x7f1e524d0930" loc="175:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_slong_t" ref="0x7f1e524d0930"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x7f1e51e3f450" loc="19:/opt/tinyos-main/tos/types/message.h">
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1e51e41e00"/>
        <typename><typedef-ref name="message_t" ref="0x7f1e51e3f450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x7f1e525395b0" loc="438:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x7f1e525395b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x7f1e517dfbb0" loc="146:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517df790"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f1e517dfbb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x7f1e524a3810" loc="44:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x7f1e524a3810"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x7f1e524cd1c0" loc="189:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x7f1e524cd1c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x7f1e520cc590" loc="65:/opt/tinyos-main/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x7f1e520cdd40"/>
        <typename><typedef-ref name="node_t" ref="0x7f1e520cc590"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x7f1e524ddde0" loc="125:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x7f1e524ddde0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x7f1e5253e2d0" loc="431:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x7f1e5253e2d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x7f1e520502e0" loc="84:/opt/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:264" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x7f1e52054170"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x7f1e520502e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x7f1e524a0b10" loc="104:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x7f1e524a0b10"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x7f1e52481360" loc="127:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:40" alignment="I:8"><union-ref ref="0x7f1e52483e30"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x7f1e52481360"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x7f1e52062600" loc="120:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x7f1e52062600"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x7f1e5247c890" loc="153:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:8"><union-ref ref="0x7f1e5247c3c0"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x7f1e5247c890"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x7f1e5247b8b0" loc="163:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x7f1e5247b8b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x7f1e524a3bc0" loc="48:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x7f1e524a3bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x7f1e5249f3f0" loc="115:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x7f1e5249f3f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x7f1e52068540" loc="61:/usr/include/x86_64-linux-gnu/sys/time.h">
      <documentation loc="32:/opt/tinyos-main/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x7f1e52068540"/></typename>
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x7f1e5206a9d0"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x7f1e52535950" loc="447:/usr/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x7f1e52535950"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x7f1e5249fb70" loc="122:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x7f1e5249fb70"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x7f1e5247f020" loc="133:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7f1e52481b20"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x7f1e5247f020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x7f1e51e4d200" loc="83:/opt/tinyos-main/tos/lib/serial/Serial.h">
      <documentation loc="71:/opt/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x7f1e51e4d200"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x7f1e517d5440" loc="202:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1e517d5020"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f1e517d5440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x7f1e517c7090" loc="279:/opt/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x7f1e517c7090"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x7f1e51b2a940" loc="96:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x7f1e51b2c700" loc="101:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x7f1e51ba55c0" loc="145:/opt/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x7f1e51a73d80" loc="67:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7f1e51a73910"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7f1e51a73d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_read_rssi_task" ref="0x7f1e51b27250" loc="528:/opt/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="hashmapEntry" ref="0x7f1e518a9450" loc="24:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x7f1e518aabd0"/>
        <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x7f1e518a9450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_sendBufferTask" ref="0x7f1e518250d0" loc="74:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x7f1e5160f5c0" loc="74:/opt/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x7f1e515dba70" loc="71:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x7f1e515cc390" loc="66:/opt/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x7f1e515cdca0"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x7f1e515cc390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x7f1e51523a40" loc="57:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x7f1e515236d0"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x7f1e51523a40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x7f1e514de0d0" loc="169:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x7f1e514dc250" loc="126:/opt/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_processCommand" ref="0x7f1e51453660" loc="24:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-array elements="I:9" size="I:36" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
